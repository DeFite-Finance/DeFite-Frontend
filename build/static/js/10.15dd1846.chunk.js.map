{"version":3,"sources":["../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/react-bootstrap/esm/Row.js"],"names":["Container","React","ref","bsPrefix","fluid","as","Component","className","props","prefix","useBootstrapPrefix","suffix","_jsx","classNames","displayName","defaultProps","DEVICE_SIZES","Col","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","activeElement","doc","ownerDocument","active","nodeName","e","OPEN_DATA_ATTRIBUTE","dataAttr","ModalManager","handleContainerOverflow","isRTL","this","modals","Math","abs","window","innerWidth","documentElement","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","m","remove","removeAttribute","Object","assign","modal","modalIdx","indexOf","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","resolveContainerRef","_ref","nodeType","manager","_excluded","useModalManager","provided","modalManager","dialog","backdrop","add","isTopModal","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","onResolved","useState","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","exited","setExited","lastFocusRef","useImperativeHandle","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","createPortal","_jsxs","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","element","adjust","actual","dataset","parseFloat","classList","baseVal","hasClass","marginProp","qsa","el","adjustAndStore","restore","fadeStyles","ENTERING","ENTERED","Fade","transitionClasses","handleEnter","node","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","timeout","mountOnEnter","createWithBsPrefix","ModalContext","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","propTypes","PropTypes","string","func","variant","oneOf","CloseButton","type","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","handleClick","ModalHeader","DivStyledAsH4","p","animation","dialogAs","DialogTransition","dialogClassName","Dialog","ariaLabelledby","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","options","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","Provider","BaseModal","preventDefault","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","Row","decoratedBsPrefix","sizePrefix","cols"],"mappings":"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","file":"static/js/10.15dd1846.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth();\n  }\n\n  getElement() {\n    return document.body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth() {\n  return Math.abs(window.innerWidth - document.documentElement.clientWidth);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport const resolveContainerRef = ref => {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) != null && _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref));\n\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const modalManager = provided || getManager();\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  ...props\n}, ref) => {\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node, isAppearing);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"sourceRoot":""}