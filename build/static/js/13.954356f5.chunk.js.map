{"version":3,"sources":["components/Wallet/chainId.tsx","components/Wallet/index.tsx"],"names":["ConnectChainId","chainId","useWeb3React","BlockNumber","library","React","useState","blockNumber","setBlockNumber","useEffect","stale","getBlockNumber","then","catch","NaN","updateBlockNumber","on","removeListener","undefined","role","Balance","account","balance","setBalance","getBalance","WalletInfo","active","error","style","margin","textAlign","display","gridGap","gridTemplateColumns","maxWidth","lineHeight","WalletAddress"],"mappings":"gLAQeA,EANQ,WACnB,IAAQC,EAAYC,cAAZD,QAER,cAAOA,QAAP,IAAOA,IAAW,I,OCAhBE,EAAc,WAChB,MAA6BD,cAArBD,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,QAEjB,EAAsCC,IAAMC,WAA5C,mBAAOC,EAAP,KAAoBC,EAApB,KA+BA,OA9BAH,IAAMI,WAAU,WACZ,GAAIL,EAAS,CACT,IAAIM,GAAQ,EAEZN,EACKO,iBACAC,MAAK,WACGF,GACDF,EAAeD,MAGtBM,OAAM,WACEH,GACDF,EAAeM,QAI3B,IAAMC,EAAoB,WACtBP,EAAeD,IAInB,OAFAH,EAAQY,GAAG,QAASD,GAEb,WACHL,GAAQ,EACRN,EAAQa,eAAe,QAASF,GAChCP,OAAeU,OAGxB,CAACd,EAASH,EAASM,IAGlB,qCACI,gDACA,sBAAMY,KAAK,MAAM,aAAW,UAA5B,0BAGA,+BAAuB,OAAhBZ,EAAuB,QAAvB,OAAiCA,QAAjC,IAAiCA,IAAe,SAKnE,SAASa,IACL,MAAsClB,cAA9BmB,EAAR,EAAQA,QAASjB,EAAjB,EAAiBA,QAASH,EAA1B,EAA0BA,QAE1B,EAA8BI,IAAMC,WAApC,mBAAOgB,EAAP,KAAgBC,EAAhB,KAyBA,OAxBAlB,IAAMI,WAAU,WACZ,GAAMY,GAAajB,EAAS,CACxB,IAAIM,GAAQ,EAeZ,OAbAN,EACKoB,WAAWH,GACXT,MAAK,WACGF,GACDa,EAAWD,MAGlBT,OAAM,WACEH,GACDa,EAAWT,QAIhB,WACHJ,GAAQ,EACRa,OAAWL,OAGpB,CAACG,EAASjB,EAASH,EAASqB,IAG3B,qCACI,2CACA,sBAAMH,KAAK,MAAM,aAAW,OAA5B,0BAGA,+BAAmB,OAAZG,EAAmB,QAAUA,EAAO,gBAAOA,GAAY,QA6C3DG,UAxCI,WAAO,IAAD,EACrB,EAA0BvB,cAAlBwB,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MAEhB,OACI,qCACI,oBAAIC,MAAO,CAAEC,OAAQ,OAAQC,UAAW,SAAxC,SAAoDJ,EAAS,eAAOC,EAAQ,eAAO,iBACnF,qBACIC,MAAO,CACHG,QAAS,OACTC,QAAS,OACTC,oBAAqB,sBACrBC,SAAU,QACVC,WAAY,OACZN,OAAQ,QAPhB,UAUI,qCACI,4CACA,sBAAMV,KAAK,MAAM,aAAW,QAA5B,oBAGA,yCAAOnB,WAAP,QAA2B,QAG/B,cAAC,EAAD,IAEA,qCACI,2CACA,sBAAMmB,KAAK,MAAM,aAAW,QAA5B,0BAGA,+BAAOiB,mBAGX,cAAChB,EAAD","file":"static/js/13.954356f5.chunk.js","sourcesContent":["import { useWeb3React } from '@web3-react/core';\r\n\r\nconst ConnectChainId = () => {\r\n    const { chainId } = useWeb3React();\r\n\r\n    return chainId ?? '';\r\n};\r\n\r\nexport default ConnectChainId;\r\n","import React from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport WalletAddress from './address';\r\nimport ConnectChainId from './chainId';\r\n\r\nconst BlockNumber = () => {\r\n    const { chainId, library } = useWeb3React();\r\n\r\n    const [blockNumber, setBlockNumber] = React.useState<number>();\r\n    React.useEffect((): any => {\r\n        if (library) {\r\n            let stale = false;\r\n\r\n            library\r\n                .getBlockNumber()\r\n                .then(() => {\r\n                    if (!stale) {\r\n                        setBlockNumber(blockNumber);\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    if (!stale) {\r\n                        setBlockNumber(NaN);\r\n                    }\r\n                });\r\n\r\n            const updateBlockNumber = () => {\r\n                setBlockNumber(blockNumber);\r\n            };\r\n            library.on('block', updateBlockNumber);\r\n\r\n            return () => {\r\n                stale = true;\r\n                library.removeListener('block', updateBlockNumber);\r\n                setBlockNumber(undefined);\r\n            };\r\n        }\r\n    }, [library, chainId, blockNumber]); // ensures refresh if referential identity of library doesn\"t change across chainIds\r\n\r\n    return (\r\n        <>\r\n            <span>Block Number</span>\r\n            <span role=\"img\" aria-label=\"numbers\">\r\n                ðŸ”¢\r\n            </span>\r\n            <span>{blockNumber === null ? 'Error' : blockNumber ?? ''}</span>\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Balance() {\r\n    const { account, library, chainId } = useWeb3React();\r\n\r\n    const [balance, setBalance] = React.useState<number>();\r\n    React.useEffect((): any => {\r\n        if (!!account && !!library) {\r\n            let stale = false;\r\n\r\n            library\r\n                .getBalance(account)\r\n                .then(() => {\r\n                    if (!stale) {\r\n                        setBalance(balance);\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    if (!stale) {\r\n                        setBalance(NaN);\r\n                    }\r\n                });\r\n\r\n            return () => {\r\n                stale = true;\r\n                setBalance(undefined);\r\n            };\r\n        }\r\n    }, [account, library, chainId, balance]); // ensures refresh if referential identity of library doesn\"t change across chainIds\r\n\r\n    return (\r\n        <>\r\n            <span>Balance</span>\r\n            <span role=\"img\" aria-label=\"gold\">\r\n                ðŸ’°\r\n            </span>\r\n            <span>{balance === null ? 'Error' : balance ? `Îž${balance}` : ''}</span>\r\n        </>\r\n    );\r\n}\r\n\r\nconst WalletInfo = () => {\r\n    const { active, error } = useWeb3React();\r\n\r\n    return (\r\n        <>\r\n            <h1 style={{ margin: '1rem', textAlign: 'right' }}>{active ? 'ðŸŸ¢' : error ? 'ðŸ”´' : 'ðŸŸ '}</h1>\r\n            <h3\r\n                style={{\r\n                    display: 'grid',\r\n                    gridGap: '1rem',\r\n                    gridTemplateColumns: '1fr min-content 1fr',\r\n                    maxWidth: '20rem',\r\n                    lineHeight: '2rem',\r\n                    margin: 'auto',\r\n                }}\r\n            >\r\n                <>\r\n                    <span>Chain Id</span>\r\n                    <span role=\"img\" aria-label=\"chain\">\r\n                        â›“\r\n                    </span>\r\n                    <span>{ConnectChainId() ?? ''}</span>\r\n                </>\r\n\r\n                <BlockNumber />\r\n\r\n                <>\r\n                    <span>Account</span>\r\n                    <span role=\"img\" aria-label=\"robot\">\r\n                        ðŸ¤–\r\n                    </span>\r\n                    <span>{WalletAddress()}</span>\r\n                </>\r\n\r\n                <Balance />\r\n            </h3>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WalletInfo;\r\n"],"sourceRoot":""}