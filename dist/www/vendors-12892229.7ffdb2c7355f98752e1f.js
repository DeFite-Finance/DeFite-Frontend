(self.webpackChunkhugiris_nft=self.webpackChunkhugiris_nft||[]).push([[813],{29931:function(t,i,e){var r;function n(t){this.rand=t}if(t.exports=function(t){return r||(r=new n(null)),r.generate(t)},t.exports.Rand=n,n.prototype.generate=function(t){return this._rand(t)},n.prototype._rand=function(t){if(this.rand.getBytes)return this.rand.getBytes(t);for(var i=new Uint8Array(t),e=0;e<i.length;e++)i[e]=this.rand.getByte();return i},"object"==typeof self)self.crypto&&self.crypto.getRandomValues?n.prototype._rand=function(t){var i=new Uint8Array(t);return self.crypto.getRandomValues(i),i}:self.msCrypto&&self.msCrypto.getRandomValues?n.prototype._rand=function(t){var i=new Uint8Array(t);return self.msCrypto.getRandomValues(i),i}:"object"==typeof window&&(n.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var h=e(89214);if("function"!=typeof h.randomBytes)throw new Error("Not supported");n.prototype._rand=function(t){return h.randomBytes(t)}}catch(t){}},74497:function(t,i,e){var r=e(89509).Buffer;function n(t){r.isBuffer(t)||(t=r.from(t));for(var i=t.length/4|0,e=new Array(i),n=0;n<i;n++)e[n]=t.readUInt32BE(4*n);return e}function h(t){for(;0<t.length;t++)t[0]=0}function o(t,i,e,r,n){for(var h,o,s,u,a=e[0],l=e[1],f=e[2],c=e[3],p=t[0]^i[0],m=t[1]^i[1],d=t[2]^i[2],v=t[3]^i[3],y=4,g=1;g<n;g++)h=a[p>>>24]^l[m>>>16&255]^f[d>>>8&255]^c[255&v]^i[y++],o=a[m>>>24]^l[d>>>16&255]^f[v>>>8&255]^c[255&p]^i[y++],s=a[d>>>24]^l[v>>>16&255]^f[p>>>8&255]^c[255&m]^i[y++],u=a[v>>>24]^l[p>>>16&255]^f[m>>>8&255]^c[255&d]^i[y++],p=h,m=o,d=s,v=u;return h=(r[p>>>24]<<24|r[m>>>16&255]<<16|r[d>>>8&255]<<8|r[255&v])^i[y++],o=(r[m>>>24]<<24|r[d>>>16&255]<<16|r[v>>>8&255]<<8|r[255&p])^i[y++],s=(r[d>>>24]<<24|r[v>>>16&255]<<16|r[p>>>8&255]<<8|r[255&m])^i[y++],u=(r[v>>>24]<<24|r[p>>>16&255]<<16|r[m>>>8&255]<<8|r[255&d])^i[y++],[h>>>=0,o>>>=0,s>>>=0,u>>>=0]}var s=[0,1,2,4,8,16,32,64,128,27,54],u=function(){for(var t=new Array(256),i=0;i<256;i++)t[i]=i<128?i<<1:i<<1^283;for(var e=[],r=[],n=[[],[],[],[]],h=[[],[],[],[]],o=0,s=0,u=0;u<256;++u){var a=s^s<<1^s<<2^s<<3^s<<4;a=a>>>8^255&a^99,e[o]=a,r[a]=o;var l=t[o],f=t[l],c=t[f],p=257*t[a]^16843008*a;n[0][o]=p<<24|p>>>8,n[1][o]=p<<16|p>>>16,n[2][o]=p<<8|p>>>24,n[3][o]=p,p=16843009*c^65537*f^257*l^16843008*o,h[0][a]=p<<24|p>>>8,h[1][a]=p<<16|p>>>16,h[2][a]=p<<8|p>>>24,h[3][a]=p,0===o?o=s=1:(o=l^t[t[t[c^l]]],s^=t[t[s]])}return{SBOX:e,INV_SBOX:r,SUB_MIX:n,INV_SUB_MIX:h}}();function a(t){this._key=n(t),this._reset()}a.blockSize=16,a.keySize=32,a.prototype.blockSize=a.blockSize,a.prototype.keySize=a.keySize,a.prototype._reset=function(){for(var t=this._key,i=t.length,e=i+6,r=4*(e+1),n=[],h=0;h<i;h++)n[h]=t[h];for(h=i;h<r;h++){var o=n[h-1];h%i==0?(o=o<<8|o>>>24,o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o],o^=s[h/i|0]<<24):i>6&&h%i==4&&(o=u.SBOX[o>>>24]<<24|u.SBOX[o>>>16&255]<<16|u.SBOX[o>>>8&255]<<8|u.SBOX[255&o]),n[h]=n[h-i]^o}for(var a=[],l=0;l<r;l++){var f=r-l,c=n[f-(l%4?0:4)];a[l]=l<4||f<=4?c:u.INV_SUB_MIX[0][u.SBOX[c>>>24]]^u.INV_SUB_MIX[1][u.SBOX[c>>>16&255]]^u.INV_SUB_MIX[2][u.SBOX[c>>>8&255]]^u.INV_SUB_MIX[3][u.SBOX[255&c]]}this._nRounds=e,this._keySchedule=n,this._invKeySchedule=a},a.prototype.encryptBlockRaw=function(t){return o(t=n(t),this._keySchedule,u.SUB_MIX,u.SBOX,this._nRounds)},a.prototype.encryptBlock=function(t){var i=this.encryptBlockRaw(t),e=r.allocUnsafe(16);return e.writeUInt32BE(i[0],0),e.writeUInt32BE(i[1],4),e.writeUInt32BE(i[2],8),e.writeUInt32BE(i[3],12),e},a.prototype.decryptBlock=function(t){var i=(t=n(t))[1];t[1]=t[3],t[3]=i;var e=o(t,this._invKeySchedule,u.INV_SUB_MIX,u.INV_SBOX,this._nRounds),h=r.allocUnsafe(16);return h.writeUInt32BE(e[0],0),h.writeUInt32BE(e[3],4),h.writeUInt32BE(e[2],8),h.writeUInt32BE(e[1],12),h},a.prototype.scrub=function(){h(this._keySchedule),h(this._invKeySchedule),h(this._key)},t.exports.AES=a},62422:function(t,i,e){var r=e(74497),n=e(89509).Buffer,h=e(71027),o=e(35717),s=e(83288),u=e(67295),a=e(20685);function l(t,i,e,o){h.call(this);var u=n.alloc(4,0);this._cipher=new r.AES(i);var l=this._cipher.encryptBlock(u);this._ghash=new s(l),e=function(t,i,e){if(12===i.length)return t._finID=n.concat([i,n.from([0,0,0,1])]),n.concat([i,n.from([0,0,0,2])]);var r=new s(e),h=i.length,o=h%16;r.update(i),o&&(o=16-o,r.update(n.alloc(o,0))),r.update(n.alloc(8,0));var u=8*h,l=n.alloc(8);l.writeUIntBE(u,0,8),r.update(l),t._finID=r.state;var f=n.from(t._finID);return a(f),f}(this,e,l),this._prev=n.from(e),this._cache=n.allocUnsafe(0),this._secCache=n.allocUnsafe(0),this._decrypt=o,this._alen=0,this._len=0,this._mode=t,this._authTag=null,this._called=!1}o(l,h),l.prototype._update=function(t){if(!this._called&&this._alen){var i=16-this._alen%16;i<16&&(i=n.alloc(i,0),this._ghash.update(i))}this._called=!0;var e=this._mode.encrypt(this,t);return this._decrypt?this._ghash.update(t):this._ghash.update(e),this._len+=t.length,e},l.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error("Unsupported state or unable to authenticate data");var t=u(this._ghash.final(8*this._alen,8*this._len),this._cipher.encryptBlock(this._finID));if(this._decrypt&&function(t,i){var e=0;t.length!==i.length&&e++;for(var r=Math.min(t.length,i.length),n=0;n<r;++n)e+=t[n]^i[n];return e}(t,this._authTag))throw new Error("Unsupported state or unable to authenticate data");this._authTag=t,this._cipher.scrub()},l.prototype.getAuthTag=function(){if(this._decrypt||!n.isBuffer(this._authTag))throw new Error("Attempting to get auth tag in unsupported state");return this._authTag},l.prototype.setAuthTag=function(t){if(!this._decrypt)throw new Error("Attempting to set auth tag in unsupported state");this._authTag=t},l.prototype.setAAD=function(t){if(this._called)throw new Error("Attempting to set AAD in unsupported state");this._ghash.update(t),this._alen+=t.length},t.exports=l},44696:function(t,i,e){var r=e(71494),n=e(66193),h=e(44946);i.createCipher=i.Cipher=r.createCipher,i.createCipheriv=i.Cipheriv=r.createCipheriv,i.createDecipher=i.Decipher=n.createDecipher,i.createDecipheriv=i.Decipheriv=n.createDecipheriv,i.listCiphers=i.getCiphers=function(){return Object.keys(h)}},66193:function(t,i,e){var r=e(62422),n=e(89509).Buffer,h=e(45),o=e(25969),s=e(71027),u=e(74497),a=e(13048);function l(t,i,e){s.call(this),this._cache=new f,this._last=void 0,this._cipher=new u.AES(i),this._prev=n.from(e),this._mode=t,this._autopadding=!0}function f(){this.cache=n.allocUnsafe(0)}function c(t,i,e){var s=h[t.toLowerCase()];if(!s)throw new TypeError("invalid suite type");if("string"==typeof e&&(e=n.from(e)),"GCM"!==s.mode&&e.length!==s.iv)throw new TypeError("invalid iv length "+e.length);if("string"==typeof i&&(i=n.from(i)),i.length!==s.key/8)throw new TypeError("invalid key length "+i.length);return"stream"===s.type?new o(s.module,i,e,!0):"auth"===s.type?new r(s.module,i,e,!0):new l(s.module,i,e)}e(35717)(l,s),l.prototype._update=function(t){var i,e;this._cache.add(t);for(var r=[];i=this._cache.get(this._autopadding);)e=this._mode.decrypt(this,i),r.push(e);return n.concat(r)},l.prototype._final=function(){var t=this._cache.flush();if(this._autopadding)return function(t){var i=t[15];if(i<1||i>16)throw new Error("unable to decrypt data");var e=-1;for(;++e<i;)if(t[e+(16-i)]!==i)throw new Error("unable to decrypt data");if(16===i)return;return t.slice(0,16-i)}(this._mode.decrypt(this,t));if(t)throw new Error("data not multiple of block length")},l.prototype.setAutoPadding=function(t){return this._autopadding=!!t,this},f.prototype.add=function(t){this.cache=n.concat([this.cache,t])},f.prototype.get=function(t){var i;if(t){if(this.cache.length>16)return i=this.cache.slice(0,16),this.cache=this.cache.slice(16),i}else if(this.cache.length>=16)return i=this.cache.slice(0,16),this.cache=this.cache.slice(16),i;return null},f.prototype.flush=function(){if(this.cache.length)return this.cache},i.createDecipher=function(t,i){var e=h[t.toLowerCase()];if(!e)throw new TypeError("invalid suite type");var r=a(i,!1,e.key,e.iv);return c(t,r.key,r.iv)},i.createDecipheriv=c},71494:function(t,i,e){var r=e(45),n=e(62422),h=e(89509).Buffer,o=e(25969),s=e(71027),u=e(74497),a=e(13048);function l(t,i,e){s.call(this),this._cache=new c,this._cipher=new u.AES(i),this._prev=h.from(e),this._mode=t,this._autopadding=!0}e(35717)(l,s),l.prototype._update=function(t){var i,e;this._cache.add(t);for(var r=[];i=this._cache.get();)e=this._mode.encrypt(this,i),r.push(e);return h.concat(r)};var f=h.alloc(16,16);function c(){this.cache=h.allocUnsafe(0)}function p(t,i,e){var s=r[t.toLowerCase()];if(!s)throw new TypeError("invalid suite type");if("string"==typeof i&&(i=h.from(i)),i.length!==s.key/8)throw new TypeError("invalid key length "+i.length);if("string"==typeof e&&(e=h.from(e)),"GCM"!==s.mode&&e.length!==s.iv)throw new TypeError("invalid iv length "+e.length);return"stream"===s.type?new o(s.module,i,e):"auth"===s.type?new n(s.module,i,e):new l(s.module,i,e)}l.prototype._final=function(){var t=this._cache.flush();if(this._autopadding)return t=this._mode.encrypt(this,t),this._cipher.scrub(),t;if(!t.equals(f))throw this._cipher.scrub(),new Error("data not multiple of block length")},l.prototype.setAutoPadding=function(t){return this._autopadding=!!t,this},c.prototype.add=function(t){this.cache=h.concat([this.cache,t])},c.prototype.get=function(){if(this.cache.length>15){var t=this.cache.slice(0,16);return this.cache=this.cache.slice(16),t}return null},c.prototype.flush=function(){for(var t=16-this.cache.length,i=h.allocUnsafe(t),e=-1;++e<t;)i.writeUInt8(t,e);return h.concat([this.cache,i])},i.createCipheriv=p,i.createCipher=function(t,i){var e=r[t.toLowerCase()];if(!e)throw new TypeError("invalid suite type");var n=a(i,!1,e.key,e.iv);return p(t,n.key,n.iv)}},83288:function(t,i,e){var r=e(89509).Buffer,n=r.alloc(16,0);function h(t){var i=r.allocUnsafe(16);return i.writeUInt32BE(t[0]>>>0,0),i.writeUInt32BE(t[1]>>>0,4),i.writeUInt32BE(t[2]>>>0,8),i.writeUInt32BE(t[3]>>>0,12),i}function o(t){this.h=t,this.state=r.alloc(16,0),this.cache=r.allocUnsafe(0)}o.prototype.ghash=function(t){for(var i=-1;++i<t.length;)this.state[i]^=t[i];this._multiply()},o.prototype._multiply=function(){for(var t,i,e,r=[(t=this.h).readUInt32BE(0),t.readUInt32BE(4),t.readUInt32BE(8),t.readUInt32BE(12)],n=[0,0,0,0],o=-1;++o<128;){for(0!=(this.state[~~(o/8)]&1<<7-o%8)&&(n[0]^=r[0],n[1]^=r[1],n[2]^=r[2],n[3]^=r[3]),e=0!=(1&r[3]),i=3;i>0;i--)r[i]=r[i]>>>1|(1&r[i-1])<<31;r[0]=r[0]>>>1,e&&(r[0]=r[0]^225<<24)}this.state=h(n)},o.prototype.update=function(t){var i;for(this.cache=r.concat([this.cache,t]);this.cache.length>=16;)i=this.cache.slice(0,16),this.cache=this.cache.slice(16),this.ghash(i)},o.prototype.final=function(t,i){return this.cache.length&&this.ghash(r.concat([this.cache,n],16)),this.ghash(h([0,t,0,i])),this.state},t.exports=o},20685:function(t){t.exports=function(t){for(var i,e=t.length;e--;){if(255!==(i=t.readUInt8(e))){i++,t.writeUInt8(i,e);break}t.writeUInt8(0,e)}}},25292:function(t,i,e){var r=e(67295);i.encrypt=function(t,i){var e=r(i,t._prev);return t._prev=t._cipher.encryptBlock(e),t._prev},i.decrypt=function(t,i){var e=t._prev;t._prev=i;var n=t._cipher.decryptBlock(i);return r(n,e)}},86311:function(t,i,e){var r=e(89509).Buffer,n=e(67295);function h(t,i,e){var h=i.length,o=n(i,t._cache);return t._cache=t._cache.slice(h),t._prev=r.concat([t._prev,e?i:o]),o}i.encrypt=function(t,i,e){for(var n,o=r.allocUnsafe(0);i.length;){if(0===t._cache.length&&(t._cache=t._cipher.encryptBlock(t._prev),t._prev=r.allocUnsafe(0)),!(t._cache.length<=i.length)){o=r.concat([o,h(t,i,e)]);break}n=t._cache.length,o=r.concat([o,h(t,i.slice(0,n),e)]),i=i.slice(n)}return o}},21510:function(t,i,e){var r=e(89509).Buffer;function n(t,i,e){for(var r,n,o=-1,s=0;++o<8;)r=i&1<<7-o?128:0,s+=(128&(n=t._cipher.encryptBlock(t._prev)[0]^r))>>o%8,t._prev=h(t._prev,e?r:n);return s}function h(t,i){var e=t.length,n=-1,h=r.allocUnsafe(t.length);for(t=r.concat([t,r.from([i])]);++n<e;)h[n]=t[n]<<1|t[n+1]>>7;return h}i.encrypt=function(t,i,e){for(var h=i.length,o=r.allocUnsafe(h),s=-1;++s<h;)o[s]=n(t,i[s],e);return o}},71964:function(t,i,e){var r=e(89509).Buffer;function n(t,i,e){var n=t._cipher.encryptBlock(t._prev)[0]^i;return t._prev=r.concat([t._prev.slice(1),r.from([e?i:n])]),n}i.encrypt=function(t,i,e){for(var h=i.length,o=r.allocUnsafe(h),s=-1;++s<h;)o[s]=n(t,i[s],e);return o}},96009:function(t,i,e){var r=e(67295),n=e(89509).Buffer,h=e(20685);function o(t){var i=t._cipher.encryptBlockRaw(t._prev);return h(t._prev),i}i.encrypt=function(t,i){var e=Math.ceil(i.length/16),h=t._cache.length;t._cache=n.concat([t._cache,n.allocUnsafe(16*e)]);for(var s=0;s<e;s++){var u=o(t),a=h+16*s;t._cache.writeUInt32BE(u[0],a+0),t._cache.writeUInt32BE(u[1],a+4),t._cache.writeUInt32BE(u[2],a+8),t._cache.writeUInt32BE(u[3],a+12)}var l=t._cache.slice(0,i.length);return t._cache=t._cache.slice(i.length),r(i,l)}},11084:function(t,i){i.encrypt=function(t,i){return t._cipher.encryptBlock(i)},i.decrypt=function(t,i){return t._cipher.decryptBlock(i)}},45:function(t,i,e){var r={ECB:e(11084),CBC:e(25292),CFB:e(86311),CFB8:e(71964),CFB1:e(21510),OFB:e(18861),CTR:e(96009),GCM:e(96009)},n=e(44946);for(var h in n)n[h].module=r[n[h].mode];t.exports=n},18861:function(t,i,e){var r=e(23085).Buffer,n=e(67295);function h(t){return t._prev=t._cipher.encryptBlock(t._prev),t._prev}i.encrypt=function(t,i){for(;t._cache.length<i.length;)t._cache=r.concat([t._cache,h(t)]);var e=t._cache.slice(0,i.length);return t._cache=t._cache.slice(i.length),n(i,e)}},25969:function(t,i,e){var r=e(74497),n=e(89509).Buffer,h=e(71027);function o(t,i,e,o){h.call(this),this._cipher=new r.AES(i),this._prev=n.from(e),this._cache=n.allocUnsafe(0),this._secCache=n.allocUnsafe(0),this._decrypt=o,this._mode=t}e(35717)(o,h),o.prototype._update=function(t){return this._mode.encrypt(this,t,this._decrypt)},o.prototype._final=function(){this._cipher.scrub()},t.exports=o},53614:function(t,i,e){var r=e(47667),n=e(44696),h=e(45),o=e(99715),s=e(13048);function u(t,i,e){if(t=t.toLowerCase(),h[t])return n.createCipheriv(t,i,e);if(o[t])return new r({key:i,iv:e,mode:t});throw new TypeError("invalid suite type")}function a(t,i,e){if(t=t.toLowerCase(),h[t])return n.createDecipheriv(t,i,e);if(o[t])return new r({key:i,iv:e,mode:t,decrypt:!0});throw new TypeError("invalid suite type")}i.createCipher=i.Cipher=function(t,i){var e,r;if(t=t.toLowerCase(),h[t])e=h[t].key,r=h[t].iv;else{if(!o[t])throw new TypeError("invalid suite type");e=8*o[t].key,r=o[t].iv}var n=s(i,!1,e,r);return u(t,n.key,n.iv)},i.createCipheriv=i.Cipheriv=u,i.createDecipher=i.Decipher=function(t,i){var e,r;if(t=t.toLowerCase(),h[t])e=h[t].key,r=h[t].iv;else{if(!o[t])throw new TypeError("invalid suite type");e=8*o[t].key,r=o[t].iv}var n=s(i,!1,e,r);return a(t,n.key,n.iv)},i.createDecipheriv=i.Decipheriv=a,i.listCiphers=i.getCiphers=function(){return Object.keys(o).concat(n.getCiphers())}},47667:function(t,i,e){var r=e(71027),n=e(15251),h=e(35717),o=e(89509).Buffer,s={"des-ede3-cbc":n.CBC.instantiate(n.EDE),"des-ede3":n.EDE,"des-ede-cbc":n.CBC.instantiate(n.EDE),"des-ede":n.EDE,"des-cbc":n.CBC.instantiate(n.DES),"des-ecb":n.DES};function u(t){r.call(this);var i,e=t.mode.toLowerCase(),n=s[e];i=t.decrypt?"decrypt":"encrypt";var h=t.key;o.isBuffer(h)||(h=o.from(h)),"des-ede"!==e&&"des-ede-cbc"!==e||(h=o.concat([h,h.slice(0,8)]));var u=t.iv;o.isBuffer(u)||(u=o.from(u)),this._des=n.create({key:h,iv:u,type:i})}s.des=s["des-cbc"],s.des3=s["des-ede3-cbc"],t.exports=u,h(u,r),u.prototype._update=function(t){return o.from(this._des.update(t))},u.prototype._final=function(){return o.from(this._des.final())}},99715:function(t,i){i["des-ecb"]={key:8,iv:0},i["des-cbc"]=i.des={key:8,iv:8},i["des-ede3-cbc"]=i.des3={key:24,iv:8},i["des-ede3"]={key:24,iv:0},i["des-ede-cbc"]={key:16,iv:8},i["des-ede"]={key:16,iv:0}},23663:function(t,i,e){var r=e(23085).Buffer,n=e(43982),h=e(61798);function o(t){var i,e=t.modulus.byteLength();do{i=new n(h(e))}while(i.cmp(t.modulus)>=0||!i.umod(t.prime1)||!i.umod(t.prime2));return i}function s(t,i){var e=function(t){var i=o(t);return{blinder:i.toRed(n.mont(t.modulus)).redPow(new n(t.publicExponent)).fromRed(),unblinder:i.invm(t.modulus)}}(i),h=i.modulus.byteLength(),s=new n(t).mul(e.blinder).umod(i.modulus),u=s.toRed(n.mont(i.prime1)),a=s.toRed(n.mont(i.prime2)),l=i.coefficient,f=i.prime1,c=i.prime2,p=u.redPow(i.exponent1).fromRed(),m=a.redPow(i.exponent2).fromRed(),d=p.isub(m).imul(l).umod(f).imul(c);return m.iadd(d).imul(e.unblinder).umod(i.modulus).toArrayLike(r,"be",h)}s.getr=o,t.exports=s},43982:function(t,i,e){!function(t,i){"use strict";function r(t,i){if(!t)throw new Error(i||"Assertion failed")}function n(t,i){t.super_=i;var e=function(){};e.prototype=i.prototype,t.prototype=new e,t.prototype.constructor=t}function h(t,i,e){if(h.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==i&&"be"!==i||(e=i,i=10),this._init(t||0,i||10,e||"be"))}var o;"object"==typeof t?t.exports=h:i.BN=h,h.BN=h,h.wordSize=26;try{o="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:e(71922).Buffer}catch(t){}function s(t,i){var e=t.charCodeAt(i);return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:void r(!1,"Invalid character in "+t)}function u(t,i,e){var r=s(t,e);return e-1>=i&&(r|=s(t,e-1)<<4),r}function a(t,i,e,n){for(var h=0,o=0,s=Math.min(t.length,e),u=i;u<s;u++){var a=t.charCodeAt(u)-48;h*=n,o=a>=49?a-49+10:a>=17?a-17+10:a,r(a>=0&&o<n,"Invalid character"),h+=o}return h}function l(t,i){t.words=i.words,t.length=i.length,t.negative=i.negative,t.red=i.red}if(h.isBN=function(t){return t instanceof h||null!==t&&"object"==typeof t&&t.constructor.wordSize===h.wordSize&&Array.isArray(t.words)},h.max=function(t,i){return t.cmp(i)>0?t:i},h.min=function(t,i){return t.cmp(i)<0?t:i},h.prototype._init=function(t,i,e){if("number"==typeof t)return this._initNumber(t,i,e);if("object"==typeof t)return this._initArray(t,i,e);"hex"===i&&(i=16),r(i===(0|i)&&i>=2&&i<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(n++,this.negative=1),n<t.length&&(16===i?this._parseHex(t,n,e):(this._parseBase(t,i,n),"le"===e&&this._initArray(this.toArray(),i,e)))},h.prototype._initNumber=function(t,i,e){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(r(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===e&&this._initArray(this.toArray(),i,e)},h.prototype._initArray=function(t,i,e){if(r("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var h,o,s=0;if("be"===e)for(n=t.length-1,h=0;n>=0;n-=3)o=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);else if("le"===e)for(n=0,h=0;n<t.length;n+=3)o=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[h]|=o<<s&67108863,this.words[h+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,h++);return this._strip()},h.prototype._parseHex=function(t,i,e){this.length=Math.ceil((t.length-i)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var n,h=0,o=0;if("be"===e)for(r=t.length-1;r>=i;r-=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;else for(r=(t.length-i)%2==0?i+1:i;r<t.length;r+=2)n=u(t,i,r)<<h,this.words[o]|=67108863&n,h>=18?(h-=18,o+=1,this.words[o]|=n>>>26):h+=8;this._strip()},h.prototype._parseBase=function(t,i,e){this.words=[0],this.length=1;for(var r=0,n=1;n<=67108863;n*=i)r++;r--,n=n/i|0;for(var h=t.length-e,o=h%r,s=Math.min(h,h-o)+e,u=0,l=e;l<s;l+=r)u=a(t,l,l+r,i),this.imuln(n),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u);if(0!==o){var f=1;for(u=a(t,l,t.length,i),l=0;l<o;l++)f*=i;this.imuln(f),this.words[0]+u<67108864?this.words[0]+=u:this._iaddn(u)}this._strip()},h.prototype.copy=function(t){t.words=new Array(this.length);for(var i=0;i<this.length;i++)t.words[i]=this.words[i];t.length=this.length,t.negative=this.negative,t.red=this.red},h.prototype._move=function(t){l(t,this)},h.prototype.clone=function(){var t=new h(null);return this.copy(t),t},h.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},h.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},h.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!=typeof Symbol&&"function"==typeof Symbol.for)try{h.prototype[Symbol.for("nodejs.util.inspect.custom")]=f}catch(t){h.prototype.inspect=f}else h.prototype.inspect=f;function f(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],p=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],m=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];h.prototype.toString=function(t,i){var e;if(i=0|i||1,16===(t=t||10)||"hex"===t){e="";for(var n=0,h=0,o=0;o<this.length;o++){var s=this.words[o],u=(16777215&(s<<n|h)).toString(16);e=0!==(h=s>>>24-n&16777215)||o!==this.length-1?c[6-u.length]+u+e:u+e,(n+=2)>=26&&(n-=26,o--)}for(0!==h&&(e=h.toString(16)+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}if(t===(0|t)&&t>=2&&t<=36){var a=p[t],l=m[t];e="";var f=this.clone();for(f.negative=0;!f.isZero();){var d=f.modrn(l).toString(t);e=(f=f.idivn(l)).isZero()?d+e:c[a-d.length]+d+e}for(this.isZero()&&(e="0"+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}r(!1,"Base should be between 2 and 36")},h.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},h.prototype.toJSON=function(){return this.toString(16,2)},o&&(h.prototype.toBuffer=function(t,i){return this.toArrayLike(o,t,i)}),h.prototype.toArray=function(t,i){return this.toArrayLike(Array,t,i)};function d(t,i,e){e.negative=i.negative^t.negative;var r=t.length+i.length|0;e.length=r,r=r-1|0;var n=0|t.words[0],h=0|i.words[0],o=n*h,s=67108863&o,u=o/67108864|0;e.words[0]=s;for(var a=1;a<r;a++){for(var l=u>>>26,f=67108863&u,c=Math.min(a,i.length-1),p=Math.max(0,a-t.length+1);p<=c;p++){var m=a-p|0;l+=(o=(n=0|t.words[m])*(h=0|i.words[p])+f)/67108864|0,f=67108863&o}e.words[a]=0|f,u=0|l}return 0!==u?e.words[a]=0|u:e.length--,e._strip()}h.prototype.toArrayLike=function(t,i,e){this._strip();var n=this.byteLength(),h=e||Math.max(1,n);r(n<=h,"byte array longer than desired length"),r(h>0,"Requested array length <= 0");var o=function(t,i){return t.allocUnsafe?t.allocUnsafe(i):new t(i)}(t,h);return this["_toArrayLike"+("le"===i?"LE":"BE")](o,n),o},h.prototype._toArrayLikeLE=function(t,i){for(var e=0,r=0,n=0,h=0;n<this.length;n++){var o=this.words[n]<<h|r;t[e++]=255&o,e<t.length&&(t[e++]=o>>8&255),e<t.length&&(t[e++]=o>>16&255),6===h?(e<t.length&&(t[e++]=o>>24&255),r=0,h=0):(r=o>>>24,h+=2)}if(e<t.length)for(t[e++]=r;e<t.length;)t[e++]=0},h.prototype._toArrayLikeBE=function(t,i){for(var e=t.length-1,r=0,n=0,h=0;n<this.length;n++){var o=this.words[n]<<h|r;t[e--]=255&o,e>=0&&(t[e--]=o>>8&255),e>=0&&(t[e--]=o>>16&255),6===h?(e>=0&&(t[e--]=o>>24&255),r=0,h=0):(r=o>>>24,h+=2)}if(e>=0)for(t[e--]=r;e>=0;)t[e--]=0},Math.clz32?h.prototype._countBits=function(t){return 32-Math.clz32(t)}:h.prototype._countBits=function(t){var i=t,e=0;return i>=4096&&(e+=13,i>>>=13),i>=64&&(e+=7,i>>>=7),i>=8&&(e+=4,i>>>=4),i>=2&&(e+=2,i>>>=2),e+i},h.prototype._zeroBits=function(t){if(0===t)return 26;var i=t,e=0;return 0==(8191&i)&&(e+=13,i>>>=13),0==(127&i)&&(e+=7,i>>>=7),0==(15&i)&&(e+=4,i>>>=4),0==(3&i)&&(e+=2,i>>>=2),0==(1&i)&&e++,e},h.prototype.bitLength=function(){var t=this.words[this.length-1],i=this._countBits(t);return 26*(this.length-1)+i},h.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,i=0;i<this.length;i++){var e=this._zeroBits(this.words[i]);if(t+=e,26!==e)break}return t},h.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},h.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},h.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},h.prototype.isNeg=function(){return 0!==this.negative},h.prototype.neg=function(){return this.clone().ineg()},h.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},h.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var i=0;i<t.length;i++)this.words[i]=this.words[i]|t.words[i];return this._strip()},h.prototype.ior=function(t){return r(0==(this.negative|t.negative)),this.iuor(t)},h.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},h.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},h.prototype.iuand=function(t){var i;i=this.length>t.length?t:this;for(var e=0;e<i.length;e++)this.words[e]=this.words[e]&t.words[e];return this.length=i.length,this._strip()},h.prototype.iand=function(t){return r(0==(this.negative|t.negative)),this.iuand(t)},h.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},h.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},h.prototype.iuxor=function(t){var i,e;this.length>t.length?(i=this,e=t):(i=t,e=this);for(var r=0;r<e.length;r++)this.words[r]=i.words[r]^e.words[r];if(this!==i)for(;r<i.length;r++)this.words[r]=i.words[r];return this.length=i.length,this._strip()},h.prototype.ixor=function(t){return r(0==(this.negative|t.negative)),this.iuxor(t)},h.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},h.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},h.prototype.inotn=function(t){r("number"==typeof t&&t>=0);var i=0|Math.ceil(t/26),e=t%26;this._expand(i),e>0&&i--;for(var n=0;n<i;n++)this.words[n]=67108863&~this.words[n];return e>0&&(this.words[n]=~this.words[n]&67108863>>26-e),this._strip()},h.prototype.notn=function(t){return this.clone().inotn(t)},h.prototype.setn=function(t,i){r("number"==typeof t&&t>=0);var e=t/26|0,n=t%26;return this._expand(e+1),this.words[e]=i?this.words[e]|1<<n:this.words[e]&~(1<<n),this._strip()},h.prototype.iadd=function(t){var i,e,r;if(0!==this.negative&&0===t.negative)return this.negative=0,i=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,i=this.isub(t),t.negative=1,i._normSign();this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0,h=0;h<r.length;h++)i=(0|e.words[h])+(0|r.words[h])+n,this.words[h]=67108863&i,n=i>>>26;for(;0!==n&&h<e.length;h++)i=(0|e.words[h])+n,this.words[h]=67108863&i,n=i>>>26;if(this.length=e.length,0!==n)this.words[this.length]=n,this.length++;else if(e!==this)for(;h<e.length;h++)this.words[h]=e.words[h];return this},h.prototype.add=function(t){var i;return 0!==t.negative&&0===this.negative?(t.negative=0,i=this.sub(t),t.negative^=1,i):0===t.negative&&0!==this.negative?(this.negative=0,i=t.sub(this),this.negative=1,i):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},h.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var i=this.iadd(t);return t.negative=1,i._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var e,r,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(e=this,r=t):(e=t,r=this);for(var h=0,o=0;o<r.length;o++)h=(i=(0|e.words[o])-(0|r.words[o])+h)>>26,this.words[o]=67108863&i;for(;0!==h&&o<e.length;o++)h=(i=(0|e.words[o])+h)>>26,this.words[o]=67108863&i;if(0===h&&o<e.length&&e!==this)for(;o<e.length;o++)this.words[o]=e.words[o];return this.length=Math.max(this.length,o),e!==this&&(this.negative=1),this._strip()},h.prototype.sub=function(t){return this.clone().isub(t)};var v=function(t,i,e){var r,n,h,o=t.words,s=i.words,u=e.words,a=0,l=0|o[0],f=8191&l,c=l>>>13,p=0|o[1],m=8191&p,d=p>>>13,v=0|o[2],y=8191&v,g=v>>>13,M=0|o[3],w=8191&M,_=M>>>13,b=0|o[4],k=8191&b,B=b>>>13,E=0|o[5],S=8191&E,A=E>>>13,C=0|o[6],I=8191&C,U=C>>>13,R=0|o[7],x=8191&R,T=R>>>13,L=0|o[8],O=8191&L,N=L>>>13,D=0|o[9],q=8191&D,X=D>>>13,Z=0|s[0],F=8191&Z,z=Z>>>13,V=0|s[1],j=8191&V,P=V>>>13,K=0|s[2],G=8191&K,H=K>>>13,J=0|s[3],Q=8191&J,W=J>>>13,Y=0|s[4],$=8191&Y,tt=Y>>>13,it=0|s[5],et=8191&it,rt=it>>>13,nt=0|s[6],ht=8191&nt,ot=nt>>>13,st=0|s[7],ut=8191&st,at=st>>>13,lt=0|s[8],ft=8191&lt,ct=lt>>>13,pt=0|s[9],mt=8191&pt,dt=pt>>>13;e.negative=t.negative^i.negative,e.length=19;var vt=(a+(r=Math.imul(f,F))|0)+((8191&(n=(n=Math.imul(f,z))+Math.imul(c,F)|0))<<13)|0;a=((h=Math.imul(c,z))+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,r=Math.imul(m,F),n=(n=Math.imul(m,z))+Math.imul(d,F)|0,h=Math.imul(d,z);var yt=(a+(r=r+Math.imul(f,j)|0)|0)+((8191&(n=(n=n+Math.imul(f,P)|0)+Math.imul(c,j)|0))<<13)|0;a=((h=h+Math.imul(c,P)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,r=Math.imul(y,F),n=(n=Math.imul(y,z))+Math.imul(g,F)|0,h=Math.imul(g,z),r=r+Math.imul(m,j)|0,n=(n=n+Math.imul(m,P)|0)+Math.imul(d,j)|0,h=h+Math.imul(d,P)|0;var gt=(a+(r=r+Math.imul(f,G)|0)|0)+((8191&(n=(n=n+Math.imul(f,H)|0)+Math.imul(c,G)|0))<<13)|0;a=((h=h+Math.imul(c,H)|0)+(n>>>13)|0)+(gt>>>26)|0,gt&=67108863,r=Math.imul(w,F),n=(n=Math.imul(w,z))+Math.imul(_,F)|0,h=Math.imul(_,z),r=r+Math.imul(y,j)|0,n=(n=n+Math.imul(y,P)|0)+Math.imul(g,j)|0,h=h+Math.imul(g,P)|0,r=r+Math.imul(m,G)|0,n=(n=n+Math.imul(m,H)|0)+Math.imul(d,G)|0,h=h+Math.imul(d,H)|0;var Mt=(a+(r=r+Math.imul(f,Q)|0)|0)+((8191&(n=(n=n+Math.imul(f,W)|0)+Math.imul(c,Q)|0))<<13)|0;a=((h=h+Math.imul(c,W)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,r=Math.imul(k,F),n=(n=Math.imul(k,z))+Math.imul(B,F)|0,h=Math.imul(B,z),r=r+Math.imul(w,j)|0,n=(n=n+Math.imul(w,P)|0)+Math.imul(_,j)|0,h=h+Math.imul(_,P)|0,r=r+Math.imul(y,G)|0,n=(n=n+Math.imul(y,H)|0)+Math.imul(g,G)|0,h=h+Math.imul(g,H)|0,r=r+Math.imul(m,Q)|0,n=(n=n+Math.imul(m,W)|0)+Math.imul(d,Q)|0,h=h+Math.imul(d,W)|0;var wt=(a+(r=r+Math.imul(f,$)|0)|0)+((8191&(n=(n=n+Math.imul(f,tt)|0)+Math.imul(c,$)|0))<<13)|0;a=((h=h+Math.imul(c,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,r=Math.imul(S,F),n=(n=Math.imul(S,z))+Math.imul(A,F)|0,h=Math.imul(A,z),r=r+Math.imul(k,j)|0,n=(n=n+Math.imul(k,P)|0)+Math.imul(B,j)|0,h=h+Math.imul(B,P)|0,r=r+Math.imul(w,G)|0,n=(n=n+Math.imul(w,H)|0)+Math.imul(_,G)|0,h=h+Math.imul(_,H)|0,r=r+Math.imul(y,Q)|0,n=(n=n+Math.imul(y,W)|0)+Math.imul(g,Q)|0,h=h+Math.imul(g,W)|0,r=r+Math.imul(m,$)|0,n=(n=n+Math.imul(m,tt)|0)+Math.imul(d,$)|0,h=h+Math.imul(d,tt)|0;var _t=(a+(r=r+Math.imul(f,et)|0)|0)+((8191&(n=(n=n+Math.imul(f,rt)|0)+Math.imul(c,et)|0))<<13)|0;a=((h=h+Math.imul(c,rt)|0)+(n>>>13)|0)+(_t>>>26)|0,_t&=67108863,r=Math.imul(I,F),n=(n=Math.imul(I,z))+Math.imul(U,F)|0,h=Math.imul(U,z),r=r+Math.imul(S,j)|0,n=(n=n+Math.imul(S,P)|0)+Math.imul(A,j)|0,h=h+Math.imul(A,P)|0,r=r+Math.imul(k,G)|0,n=(n=n+Math.imul(k,H)|0)+Math.imul(B,G)|0,h=h+Math.imul(B,H)|0,r=r+Math.imul(w,Q)|0,n=(n=n+Math.imul(w,W)|0)+Math.imul(_,Q)|0,h=h+Math.imul(_,W)|0,r=r+Math.imul(y,$)|0,n=(n=n+Math.imul(y,tt)|0)+Math.imul(g,$)|0,h=h+Math.imul(g,tt)|0,r=r+Math.imul(m,et)|0,n=(n=n+Math.imul(m,rt)|0)+Math.imul(d,et)|0,h=h+Math.imul(d,rt)|0;var bt=(a+(r=r+Math.imul(f,ht)|0)|0)+((8191&(n=(n=n+Math.imul(f,ot)|0)+Math.imul(c,ht)|0))<<13)|0;a=((h=h+Math.imul(c,ot)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,r=Math.imul(x,F),n=(n=Math.imul(x,z))+Math.imul(T,F)|0,h=Math.imul(T,z),r=r+Math.imul(I,j)|0,n=(n=n+Math.imul(I,P)|0)+Math.imul(U,j)|0,h=h+Math.imul(U,P)|0,r=r+Math.imul(S,G)|0,n=(n=n+Math.imul(S,H)|0)+Math.imul(A,G)|0,h=h+Math.imul(A,H)|0,r=r+Math.imul(k,Q)|0,n=(n=n+Math.imul(k,W)|0)+Math.imul(B,Q)|0,h=h+Math.imul(B,W)|0,r=r+Math.imul(w,$)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(_,$)|0,h=h+Math.imul(_,tt)|0,r=r+Math.imul(y,et)|0,n=(n=n+Math.imul(y,rt)|0)+Math.imul(g,et)|0,h=h+Math.imul(g,rt)|0,r=r+Math.imul(m,ht)|0,n=(n=n+Math.imul(m,ot)|0)+Math.imul(d,ht)|0,h=h+Math.imul(d,ot)|0;var kt=(a+(r=r+Math.imul(f,ut)|0)|0)+((8191&(n=(n=n+Math.imul(f,at)|0)+Math.imul(c,ut)|0))<<13)|0;a=((h=h+Math.imul(c,at)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,r=Math.imul(O,F),n=(n=Math.imul(O,z))+Math.imul(N,F)|0,h=Math.imul(N,z),r=r+Math.imul(x,j)|0,n=(n=n+Math.imul(x,P)|0)+Math.imul(T,j)|0,h=h+Math.imul(T,P)|0,r=r+Math.imul(I,G)|0,n=(n=n+Math.imul(I,H)|0)+Math.imul(U,G)|0,h=h+Math.imul(U,H)|0,r=r+Math.imul(S,Q)|0,n=(n=n+Math.imul(S,W)|0)+Math.imul(A,Q)|0,h=h+Math.imul(A,W)|0,r=r+Math.imul(k,$)|0,n=(n=n+Math.imul(k,tt)|0)+Math.imul(B,$)|0,h=h+Math.imul(B,tt)|0,r=r+Math.imul(w,et)|0,n=(n=n+Math.imul(w,rt)|0)+Math.imul(_,et)|0,h=h+Math.imul(_,rt)|0,r=r+Math.imul(y,ht)|0,n=(n=n+Math.imul(y,ot)|0)+Math.imul(g,ht)|0,h=h+Math.imul(g,ot)|0,r=r+Math.imul(m,ut)|0,n=(n=n+Math.imul(m,at)|0)+Math.imul(d,ut)|0,h=h+Math.imul(d,at)|0;var Bt=(a+(r=r+Math.imul(f,ft)|0)|0)+((8191&(n=(n=n+Math.imul(f,ct)|0)+Math.imul(c,ft)|0))<<13)|0;a=((h=h+Math.imul(c,ct)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,r=Math.imul(q,F),n=(n=Math.imul(q,z))+Math.imul(X,F)|0,h=Math.imul(X,z),r=r+Math.imul(O,j)|0,n=(n=n+Math.imul(O,P)|0)+Math.imul(N,j)|0,h=h+Math.imul(N,P)|0,r=r+Math.imul(x,G)|0,n=(n=n+Math.imul(x,H)|0)+Math.imul(T,G)|0,h=h+Math.imul(T,H)|0,r=r+Math.imul(I,Q)|0,n=(n=n+Math.imul(I,W)|0)+Math.imul(U,Q)|0,h=h+Math.imul(U,W)|0,r=r+Math.imul(S,$)|0,n=(n=n+Math.imul(S,tt)|0)+Math.imul(A,$)|0,h=h+Math.imul(A,tt)|0,r=r+Math.imul(k,et)|0,n=(n=n+Math.imul(k,rt)|0)+Math.imul(B,et)|0,h=h+Math.imul(B,rt)|0,r=r+Math.imul(w,ht)|0,n=(n=n+Math.imul(w,ot)|0)+Math.imul(_,ht)|0,h=h+Math.imul(_,ot)|0,r=r+Math.imul(y,ut)|0,n=(n=n+Math.imul(y,at)|0)+Math.imul(g,ut)|0,h=h+Math.imul(g,at)|0,r=r+Math.imul(m,ft)|0,n=(n=n+Math.imul(m,ct)|0)+Math.imul(d,ft)|0,h=h+Math.imul(d,ct)|0;var Et=(a+(r=r+Math.imul(f,mt)|0)|0)+((8191&(n=(n=n+Math.imul(f,dt)|0)+Math.imul(c,mt)|0))<<13)|0;a=((h=h+Math.imul(c,dt)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,r=Math.imul(q,j),n=(n=Math.imul(q,P))+Math.imul(X,j)|0,h=Math.imul(X,P),r=r+Math.imul(O,G)|0,n=(n=n+Math.imul(O,H)|0)+Math.imul(N,G)|0,h=h+Math.imul(N,H)|0,r=r+Math.imul(x,Q)|0,n=(n=n+Math.imul(x,W)|0)+Math.imul(T,Q)|0,h=h+Math.imul(T,W)|0,r=r+Math.imul(I,$)|0,n=(n=n+Math.imul(I,tt)|0)+Math.imul(U,$)|0,h=h+Math.imul(U,tt)|0,r=r+Math.imul(S,et)|0,n=(n=n+Math.imul(S,rt)|0)+Math.imul(A,et)|0,h=h+Math.imul(A,rt)|0,r=r+Math.imul(k,ht)|0,n=(n=n+Math.imul(k,ot)|0)+Math.imul(B,ht)|0,h=h+Math.imul(B,ot)|0,r=r+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,at)|0)+Math.imul(_,ut)|0,h=h+Math.imul(_,at)|0,r=r+Math.imul(y,ft)|0,n=(n=n+Math.imul(y,ct)|0)+Math.imul(g,ft)|0,h=h+Math.imul(g,ct)|0;var St=(a+(r=r+Math.imul(m,mt)|0)|0)+((8191&(n=(n=n+Math.imul(m,dt)|0)+Math.imul(d,mt)|0))<<13)|0;a=((h=h+Math.imul(d,dt)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,r=Math.imul(q,G),n=(n=Math.imul(q,H))+Math.imul(X,G)|0,h=Math.imul(X,H),r=r+Math.imul(O,Q)|0,n=(n=n+Math.imul(O,W)|0)+Math.imul(N,Q)|0,h=h+Math.imul(N,W)|0,r=r+Math.imul(x,$)|0,n=(n=n+Math.imul(x,tt)|0)+Math.imul(T,$)|0,h=h+Math.imul(T,tt)|0,r=r+Math.imul(I,et)|0,n=(n=n+Math.imul(I,rt)|0)+Math.imul(U,et)|0,h=h+Math.imul(U,rt)|0,r=r+Math.imul(S,ht)|0,n=(n=n+Math.imul(S,ot)|0)+Math.imul(A,ht)|0,h=h+Math.imul(A,ot)|0,r=r+Math.imul(k,ut)|0,n=(n=n+Math.imul(k,at)|0)+Math.imul(B,ut)|0,h=h+Math.imul(B,at)|0,r=r+Math.imul(w,ft)|0,n=(n=n+Math.imul(w,ct)|0)+Math.imul(_,ft)|0,h=h+Math.imul(_,ct)|0;var At=(a+(r=r+Math.imul(y,mt)|0)|0)+((8191&(n=(n=n+Math.imul(y,dt)|0)+Math.imul(g,mt)|0))<<13)|0;a=((h=h+Math.imul(g,dt)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,r=Math.imul(q,Q),n=(n=Math.imul(q,W))+Math.imul(X,Q)|0,h=Math.imul(X,W),r=r+Math.imul(O,$)|0,n=(n=n+Math.imul(O,tt)|0)+Math.imul(N,$)|0,h=h+Math.imul(N,tt)|0,r=r+Math.imul(x,et)|0,n=(n=n+Math.imul(x,rt)|0)+Math.imul(T,et)|0,h=h+Math.imul(T,rt)|0,r=r+Math.imul(I,ht)|0,n=(n=n+Math.imul(I,ot)|0)+Math.imul(U,ht)|0,h=h+Math.imul(U,ot)|0,r=r+Math.imul(S,ut)|0,n=(n=n+Math.imul(S,at)|0)+Math.imul(A,ut)|0,h=h+Math.imul(A,at)|0,r=r+Math.imul(k,ft)|0,n=(n=n+Math.imul(k,ct)|0)+Math.imul(B,ft)|0,h=h+Math.imul(B,ct)|0;var Ct=(a+(r=r+Math.imul(w,mt)|0)|0)+((8191&(n=(n=n+Math.imul(w,dt)|0)+Math.imul(_,mt)|0))<<13)|0;a=((h=h+Math.imul(_,dt)|0)+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863,r=Math.imul(q,$),n=(n=Math.imul(q,tt))+Math.imul(X,$)|0,h=Math.imul(X,tt),r=r+Math.imul(O,et)|0,n=(n=n+Math.imul(O,rt)|0)+Math.imul(N,et)|0,h=h+Math.imul(N,rt)|0,r=r+Math.imul(x,ht)|0,n=(n=n+Math.imul(x,ot)|0)+Math.imul(T,ht)|0,h=h+Math.imul(T,ot)|0,r=r+Math.imul(I,ut)|0,n=(n=n+Math.imul(I,at)|0)+Math.imul(U,ut)|0,h=h+Math.imul(U,at)|0,r=r+Math.imul(S,ft)|0,n=(n=n+Math.imul(S,ct)|0)+Math.imul(A,ft)|0,h=h+Math.imul(A,ct)|0;var It=(a+(r=r+Math.imul(k,mt)|0)|0)+((8191&(n=(n=n+Math.imul(k,dt)|0)+Math.imul(B,mt)|0))<<13)|0;a=((h=h+Math.imul(B,dt)|0)+(n>>>13)|0)+(It>>>26)|0,It&=67108863,r=Math.imul(q,et),n=(n=Math.imul(q,rt))+Math.imul(X,et)|0,h=Math.imul(X,rt),r=r+Math.imul(O,ht)|0,n=(n=n+Math.imul(O,ot)|0)+Math.imul(N,ht)|0,h=h+Math.imul(N,ot)|0,r=r+Math.imul(x,ut)|0,n=(n=n+Math.imul(x,at)|0)+Math.imul(T,ut)|0,h=h+Math.imul(T,at)|0,r=r+Math.imul(I,ft)|0,n=(n=n+Math.imul(I,ct)|0)+Math.imul(U,ft)|0,h=h+Math.imul(U,ct)|0;var Ut=(a+(r=r+Math.imul(S,mt)|0)|0)+((8191&(n=(n=n+Math.imul(S,dt)|0)+Math.imul(A,mt)|0))<<13)|0;a=((h=h+Math.imul(A,dt)|0)+(n>>>13)|0)+(Ut>>>26)|0,Ut&=67108863,r=Math.imul(q,ht),n=(n=Math.imul(q,ot))+Math.imul(X,ht)|0,h=Math.imul(X,ot),r=r+Math.imul(O,ut)|0,n=(n=n+Math.imul(O,at)|0)+Math.imul(N,ut)|0,h=h+Math.imul(N,at)|0,r=r+Math.imul(x,ft)|0,n=(n=n+Math.imul(x,ct)|0)+Math.imul(T,ft)|0,h=h+Math.imul(T,ct)|0;var Rt=(a+(r=r+Math.imul(I,mt)|0)|0)+((8191&(n=(n=n+Math.imul(I,dt)|0)+Math.imul(U,mt)|0))<<13)|0;a=((h=h+Math.imul(U,dt)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,r=Math.imul(q,ut),n=(n=Math.imul(q,at))+Math.imul(X,ut)|0,h=Math.imul(X,at),r=r+Math.imul(O,ft)|0,n=(n=n+Math.imul(O,ct)|0)+Math.imul(N,ft)|0,h=h+Math.imul(N,ct)|0;var xt=(a+(r=r+Math.imul(x,mt)|0)|0)+((8191&(n=(n=n+Math.imul(x,dt)|0)+Math.imul(T,mt)|0))<<13)|0;a=((h=h+Math.imul(T,dt)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,r=Math.imul(q,ft),n=(n=Math.imul(q,ct))+Math.imul(X,ft)|0,h=Math.imul(X,ct);var Tt=(a+(r=r+Math.imul(O,mt)|0)|0)+((8191&(n=(n=n+Math.imul(O,dt)|0)+Math.imul(N,mt)|0))<<13)|0;a=((h=h+Math.imul(N,dt)|0)+(n>>>13)|0)+(Tt>>>26)|0,Tt&=67108863;var Lt=(a+(r=Math.imul(q,mt))|0)+((8191&(n=(n=Math.imul(q,dt))+Math.imul(X,mt)|0))<<13)|0;return a=((h=Math.imul(X,dt))+(n>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,u[0]=vt,u[1]=yt,u[2]=gt,u[3]=Mt,u[4]=wt,u[5]=_t,u[6]=bt,u[7]=kt,u[8]=Bt,u[9]=Et,u[10]=St,u[11]=At,u[12]=Ct,u[13]=It,u[14]=Ut,u[15]=Rt,u[16]=xt,u[17]=Tt,u[18]=Lt,0!==a&&(u[19]=a,e.length++),e};function y(t,i,e){e.negative=i.negative^t.negative,e.length=t.length+i.length;for(var r=0,n=0,h=0;h<e.length-1;h++){var o=n;n=0;for(var s=67108863&r,u=Math.min(h,i.length-1),a=Math.max(0,h-t.length+1);a<=u;a++){var l=h-a,f=(0|t.words[l])*(0|i.words[a]),c=67108863&f;s=67108863&(c=c+s|0),n+=(o=(o=o+(f/67108864|0)|0)+(c>>>26)|0)>>>26,o&=67108863}e.words[h]=s,r=o,o=n}return 0!==r?e.words[h]=r:e.length--,e._strip()}function g(t,i,e){return y(t,i,e)}function M(t,i){this.x=t,this.y=i}Math.imul||(v=d),h.prototype.mulTo=function(t,i){var e=this.length+t.length;return 10===this.length&&10===t.length?v(this,t,i):e<63?d(this,t,i):e<1024?y(this,t,i):g(this,t,i)},M.prototype.makeRBT=function(t){for(var i=new Array(t),e=h.prototype._countBits(t)-1,r=0;r<t;r++)i[r]=this.revBin(r,e,t);return i},M.prototype.revBin=function(t,i,e){if(0===t||t===e-1)return t;for(var r=0,n=0;n<i;n++)r|=(1&t)<<i-n-1,t>>=1;return r},M.prototype.permute=function(t,i,e,r,n,h){for(var o=0;o<h;o++)r[o]=i[t[o]],n[o]=e[t[o]]},M.prototype.transform=function(t,i,e,r,n,h){this.permute(h,t,i,e,r,n);for(var o=1;o<n;o<<=1)for(var s=o<<1,u=Math.cos(2*Math.PI/s),a=Math.sin(2*Math.PI/s),l=0;l<n;l+=s)for(var f=u,c=a,p=0;p<o;p++){var m=e[l+p],d=r[l+p],v=e[l+p+o],y=r[l+p+o],g=f*v-c*y;y=f*y+c*v,v=g,e[l+p]=m+v,r[l+p]=d+y,e[l+p+o]=m-v,r[l+p+o]=d-y,p!==s&&(g=u*f-a*c,c=u*c+a*f,f=g)}},M.prototype.guessLen13b=function(t,i){var e=1|Math.max(i,t),r=1&e,n=0;for(e=e/2|0;e;e>>>=1)n++;return 1<<n+1+r},M.prototype.conjugate=function(t,i,e){if(!(e<=1))for(var r=0;r<e/2;r++){var n=t[r];t[r]=t[e-r-1],t[e-r-1]=n,n=i[r],i[r]=-i[e-r-1],i[e-r-1]=-n}},M.prototype.normalize13b=function(t,i){for(var e=0,r=0;r<i/2;r++){var n=8192*Math.round(t[2*r+1]/i)+Math.round(t[2*r]/i)+e;t[r]=67108863&n,e=n<67108864?0:n/67108864|0}return t},M.prototype.convert13b=function(t,i,e,n){for(var h=0,o=0;o<i;o++)h+=0|t[o],e[2*o]=8191&h,h>>>=13,e[2*o+1]=8191&h,h>>>=13;for(o=2*i;o<n;++o)e[o]=0;r(0===h),r(0==(-8192&h))},M.prototype.stub=function(t){for(var i=new Array(t),e=0;e<t;e++)i[e]=0;return i},M.prototype.mulp=function(t,i,e){var r=2*this.guessLen13b(t.length,i.length),n=this.makeRBT(r),h=this.stub(r),o=new Array(r),s=new Array(r),u=new Array(r),a=new Array(r),l=new Array(r),f=new Array(r),c=e.words;c.length=r,this.convert13b(t.words,t.length,o,r),this.convert13b(i.words,i.length,a,r),this.transform(o,h,s,u,r,n),this.transform(a,h,l,f,r,n);for(var p=0;p<r;p++){var m=s[p]*l[p]-u[p]*f[p];u[p]=s[p]*f[p]+u[p]*l[p],s[p]=m}return this.conjugate(s,u,r),this.transform(s,u,c,h,r,n),this.conjugate(c,h,r),this.normalize13b(c,r),e.negative=t.negative^i.negative,e.length=t.length+i.length,e._strip()},h.prototype.mul=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),this.mulTo(t,i)},h.prototype.mulf=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),g(this,t,i)},h.prototype.imul=function(t){return this.clone().mulTo(t,this)},h.prototype.imuln=function(t){var i=t<0;i&&(t=-t),r("number"==typeof t),r(t<67108864);for(var e=0,n=0;n<this.length;n++){var h=(0|this.words[n])*t,o=(67108863&h)+(67108863&e);e>>=26,e+=h/67108864|0,e+=o>>>26,this.words[n]=67108863&o}return 0!==e&&(this.words[n]=e,this.length++),i?this.ineg():this},h.prototype.muln=function(t){return this.clone().imuln(t)},h.prototype.sqr=function(){return this.mul(this)},h.prototype.isqr=function(){return this.imul(this.clone())},h.prototype.pow=function(t){var i=function(t){for(var i=new Array(t.bitLength()),e=0;e<i.length;e++){var r=e/26|0,n=e%26;i[e]=t.words[r]>>>n&1}return i}(t);if(0===i.length)return new h(1);for(var e=this,r=0;r<i.length&&0===i[r];r++,e=e.sqr());if(++r<i.length)for(var n=e.sqr();r<i.length;r++,n=n.sqr())0!==i[r]&&(e=e.mul(n));return e},h.prototype.iushln=function(t){r("number"==typeof t&&t>=0);var i,e=t%26,n=(t-e)/26,h=67108863>>>26-e<<26-e;if(0!==e){var o=0;for(i=0;i<this.length;i++){var s=this.words[i]&h,u=(0|this.words[i])-s<<e;this.words[i]=u|o,o=s>>>26-e}o&&(this.words[i]=o,this.length++)}if(0!==n){for(i=this.length-1;i>=0;i--)this.words[i+n]=this.words[i];for(i=0;i<n;i++)this.words[i]=0;this.length+=n}return this._strip()},h.prototype.ishln=function(t){return r(0===this.negative),this.iushln(t)},h.prototype.iushrn=function(t,i,e){var n;r("number"==typeof t&&t>=0),n=i?(i-i%26)/26:0;var h=t%26,o=Math.min((t-h)/26,this.length),s=67108863^67108863>>>h<<h,u=e;if(n-=o,n=Math.max(0,n),u){for(var a=0;a<o;a++)u.words[a]=this.words[a];u.length=o}if(0===o);else if(this.length>o)for(this.length-=o,a=0;a<this.length;a++)this.words[a]=this.words[a+o];else this.words[0]=0,this.length=1;var l=0;for(a=this.length-1;a>=0&&(0!==l||a>=n);a--){var f=0|this.words[a];this.words[a]=l<<26-h|f>>>h,l=f&s}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},h.prototype.ishrn=function(t,i,e){return r(0===this.negative),this.iushrn(t,i,e)},h.prototype.shln=function(t){return this.clone().ishln(t)},h.prototype.ushln=function(t){return this.clone().iushln(t)},h.prototype.shrn=function(t){return this.clone().ishrn(t)},h.prototype.ushrn=function(t){return this.clone().iushrn(t)},h.prototype.testn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26,n=1<<i;return!(this.length<=e)&&!!(this.words[e]&n)},h.prototype.imaskn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=e)return this;if(0!==i&&e++,this.length=Math.min(e,this.length),0!==i){var n=67108863^67108863>>>i<<i;this.words[this.length-1]&=n}return this._strip()},h.prototype.maskn=function(t){return this.clone().imaskn(t)},h.prototype.iaddn=function(t){return r("number"==typeof t),r(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<=t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},h.prototype._iaddn=function(t){this.words[0]+=t;for(var i=0;i<this.length&&this.words[i]>=67108864;i++)this.words[i]-=67108864,i===this.length-1?this.words[i+1]=1:this.words[i+1]++;return this.length=Math.max(this.length,i+1),this},h.prototype.isubn=function(t){if(r("number"==typeof t),r(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var i=0;i<this.length&&this.words[i]<0;i++)this.words[i]+=67108864,this.words[i+1]-=1;return this._strip()},h.prototype.addn=function(t){return this.clone().iaddn(t)},h.prototype.subn=function(t){return this.clone().isubn(t)},h.prototype.iabs=function(){return this.negative=0,this},h.prototype.abs=function(){return this.clone().iabs()},h.prototype._ishlnsubmul=function(t,i,e){var n,h,o=t.length+e;this._expand(o);var s=0;for(n=0;n<t.length;n++){h=(0|this.words[n+e])+s;var u=(0|t.words[n])*i;s=((h-=67108863&u)>>26)-(u/67108864|0),this.words[n+e]=67108863&h}for(;n<this.length-e;n++)s=(h=(0|this.words[n+e])+s)>>26,this.words[n+e]=67108863&h;if(0===s)return this._strip();for(r(-1===s),s=0,n=0;n<this.length;n++)s=(h=-(0|this.words[n])+s)>>26,this.words[n]=67108863&h;return this.negative=1,this._strip()},h.prototype._wordDiv=function(t,i){var e=(this.length,t.length),r=this.clone(),n=t,o=0|n.words[n.length-1];0!==(e=26-this._countBits(o))&&(n=n.ushln(e),r.iushln(e),o=0|n.words[n.length-1]);var s,u=r.length-n.length;if("mod"!==i){(s=new h(null)).length=u+1,s.words=new Array(s.length);for(var a=0;a<s.length;a++)s.words[a]=0}var l=r.clone()._ishlnsubmul(n,1,u);0===l.negative&&(r=l,s&&(s.words[u]=1));for(var f=u-1;f>=0;f--){var c=67108864*(0|r.words[n.length+f])+(0|r.words[n.length+f-1]);for(c=Math.min(c/o|0,67108863),r._ishlnsubmul(n,c,f);0!==r.negative;)c--,r.negative=0,r._ishlnsubmul(n,1,f),r.isZero()||(r.negative^=1);s&&(s.words[f]=c)}return s&&s._strip(),r._strip(),"div"!==i&&0!==e&&r.iushrn(e),{div:s||null,mod:r}},h.prototype.divmod=function(t,i,e){return r(!t.isZero()),this.isZero()?{div:new h(0),mod:new h(0)}:0!==this.negative&&0===t.negative?(s=this.neg().divmod(t,i),"mod"!==i&&(n=s.div.neg()),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.iadd(t)),{div:n,mod:o}):0===this.negative&&0!==t.negative?(s=this.divmod(t.neg(),i),"mod"!==i&&(n=s.div.neg()),{div:n,mod:s.mod}):0!=(this.negative&t.negative)?(s=this.neg().divmod(t.neg(),i),"div"!==i&&(o=s.mod.neg(),e&&0!==o.negative&&o.isub(t)),{div:s.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new h(0),mod:this}:1===t.length?"div"===i?{div:this.divn(t.words[0]),mod:null}:"mod"===i?{div:null,mod:new h(this.modrn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new h(this.modrn(t.words[0]))}:this._wordDiv(t,i);var n,o,s},h.prototype.div=function(t){return this.divmod(t,"div",!1).div},h.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},h.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},h.prototype.divRound=function(t){var i=this.divmod(t);if(i.mod.isZero())return i.div;var e=0!==i.div.negative?i.mod.isub(t):i.mod,r=t.ushrn(1),n=t.andln(1),h=e.cmp(r);return h<0||1===n&&0===h?i.div:0!==i.div.negative?i.div.isubn(1):i.div.iaddn(1)},h.prototype.modrn=function(t){var i=t<0;i&&(t=-t),r(t<=67108863);for(var e=(1<<26)%t,n=0,h=this.length-1;h>=0;h--)n=(e*n+(0|this.words[h]))%t;return i?-n:n},h.prototype.modn=function(t){return this.modrn(t)},h.prototype.idivn=function(t){var i=t<0;i&&(t=-t),r(t<=67108863);for(var e=0,n=this.length-1;n>=0;n--){var h=(0|this.words[n])+67108864*e;this.words[n]=h/t|0,e=h%t}return this._strip(),i?this.ineg():this},h.prototype.divn=function(t){return this.clone().idivn(t)},h.prototype.egcd=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n=new h(1),o=new h(0),s=new h(0),u=new h(1),a=0;i.isEven()&&e.isEven();)i.iushrn(1),e.iushrn(1),++a;for(var l=e.clone(),f=i.clone();!i.isZero();){for(var c=0,p=1;0==(i.words[0]&p)&&c<26;++c,p<<=1);if(c>0)for(i.iushrn(c);c-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(l),o.isub(f)),n.iushrn(1),o.iushrn(1);for(var m=0,d=1;0==(e.words[0]&d)&&m<26;++m,d<<=1);if(m>0)for(e.iushrn(m);m-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(f)),s.iushrn(1),u.iushrn(1);i.cmp(e)>=0?(i.isub(e),n.isub(s),o.isub(u)):(e.isub(i),s.isub(n),u.isub(o))}return{a:s,b:u,gcd:e.iushln(a)}},h.prototype._invmp=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n,o=new h(1),s=new h(0),u=e.clone();i.cmpn(1)>0&&e.cmpn(1)>0;){for(var a=0,l=1;0==(i.words[0]&l)&&a<26;++a,l<<=1);if(a>0)for(i.iushrn(a);a-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var f=0,c=1;0==(e.words[0]&c)&&f<26;++f,c<<=1);if(f>0)for(e.iushrn(f);f-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);i.cmp(e)>=0?(i.isub(e),o.isub(s)):(e.isub(i),s.isub(o))}return(n=0===i.cmpn(1)?o:s).cmpn(0)<0&&n.iadd(t),n},h.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var i=this.clone(),e=t.clone();i.negative=0,e.negative=0;for(var r=0;i.isEven()&&e.isEven();r++)i.iushrn(1),e.iushrn(1);for(;;){for(;i.isEven();)i.iushrn(1);for(;e.isEven();)e.iushrn(1);var n=i.cmp(e);if(n<0){var h=i;i=e,e=h}else if(0===n||0===e.cmpn(1))break;i.isub(e)}return e.iushln(r)},h.prototype.invm=function(t){return this.egcd(t).a.umod(t)},h.prototype.isEven=function(){return 0==(1&this.words[0])},h.prototype.isOdd=function(){return 1==(1&this.words[0])},h.prototype.andln=function(t){return this.words[0]&t},h.prototype.bincn=function(t){r("number"==typeof t);var i=t%26,e=(t-i)/26,n=1<<i;if(this.length<=e)return this._expand(e+1),this.words[e]|=n,this;for(var h=n,o=e;0!==h&&o<this.length;o++){var s=0|this.words[o];h=(s+=h)>>>26,s&=67108863,this.words[o]=s}return 0!==h&&(this.words[o]=h,this.length++),this},h.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},h.prototype.cmpn=function(t){var i,e=t<0;if(0!==this.negative&&!e)return-1;if(0===this.negative&&e)return 1;if(this._strip(),this.length>1)i=1;else{e&&(t=-t),r(t<=67108863,"Number is too big");var n=0|this.words[0];i=n===t?0:n<t?-1:1}return 0!==this.negative?0|-i:i},h.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var i=this.ucmp(t);return 0!==this.negative?0|-i:i},h.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var i=0,e=this.length-1;e>=0;e--){var r=0|this.words[e],n=0|t.words[e];if(r!==n){r<n?i=-1:r>n&&(i=1);break}}return i},h.prototype.gtn=function(t){return 1===this.cmpn(t)},h.prototype.gt=function(t){return 1===this.cmp(t)},h.prototype.gten=function(t){return this.cmpn(t)>=0},h.prototype.gte=function(t){return this.cmp(t)>=0},h.prototype.ltn=function(t){return-1===this.cmpn(t)},h.prototype.lt=function(t){return-1===this.cmp(t)},h.prototype.lten=function(t){return this.cmpn(t)<=0},h.prototype.lte=function(t){return this.cmp(t)<=0},h.prototype.eqn=function(t){return 0===this.cmpn(t)},h.prototype.eq=function(t){return 0===this.cmp(t)},h.red=function(t){return new S(t)},h.prototype.toRed=function(t){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},h.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},h.prototype._forceRed=function(t){return this.red=t,this},h.prototype.forceRed=function(t){return r(!this.red,"Already a number in reduction context"),this._forceRed(t)},h.prototype.redAdd=function(t){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},h.prototype.redIAdd=function(t){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},h.prototype.redSub=function(t){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},h.prototype.redISub=function(t){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},h.prototype.redShl=function(t){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},h.prototype.redMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},h.prototype.redIMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},h.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},h.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},h.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},h.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},h.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},h.prototype.redPow=function(t){return r(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var w={k256:null,p224:null,p192:null,p25519:null};function _(t,i){this.name=t,this.p=new h(i,16),this.n=this.p.bitLength(),this.k=new h(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function b(){_.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function k(){_.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function B(){_.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function E(){_.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function S(t){if("string"==typeof t){var i=h._prime(t);this.m=i.p,this.prime=i}else r(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function A(t){S.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new h(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}_.prototype._tmp=function(){var t=new h(null);return t.words=new Array(Math.ceil(this.n/13)),t},_.prototype.ireduce=function(t){var i,e=t;do{this.split(e,this.tmp),i=(e=(e=this.imulK(e)).iadd(this.tmp)).bitLength()}while(i>this.n);var r=i<this.n?-1:e.ucmp(this.p);return 0===r?(e.words[0]=0,e.length=1):r>0?e.isub(this.p):void 0!==e.strip?e.strip():e._strip(),e},_.prototype.split=function(t,i){t.iushrn(this.n,0,i)},_.prototype.imulK=function(t){return t.imul(this.k)},n(b,_),b.prototype.split=function(t,i){for(var e=4194303,r=Math.min(t.length,9),n=0;n<r;n++)i.words[n]=t.words[n];if(i.length=r,t.length<=9)return t.words[0]=0,void(t.length=1);var h=t.words[9];for(i.words[i.length++]=h&e,n=10;n<t.length;n++){var o=0|t.words[n];t.words[n-10]=(o&e)<<4|h>>>22,h=o}h>>>=22,t.words[n-10]=h,0===h&&t.length>10?t.length-=10:t.length-=9},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var i=0,e=0;e<t.length;e++){var r=0|t.words[e];i+=977*r,t.words[e]=67108863&i,i=64*r+(i/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(k,_),n(B,_),n(E,_),E.prototype.imulK=function(t){for(var i=0,e=0;e<t.length;e++){var r=19*(0|t.words[e])+i,n=67108863&r;r>>>=26,t.words[e]=n,i=r}return 0!==i&&(t.words[t.length++]=i),t},h._prime=function(t){if(w[t])return w[t];var i;if("k256"===t)i=new b;else if("p224"===t)i=new k;else if("p192"===t)i=new B;else{if("p25519"!==t)throw new Error("Unknown prime "+t);i=new E}return w[t]=i,i},S.prototype._verify1=function(t){r(0===t.negative,"red works only with positives"),r(t.red,"red works only with red numbers")},S.prototype._verify2=function(t,i){r(0==(t.negative|i.negative),"red works only with positives"),r(t.red&&t.red===i.red,"red works only with red numbers")},S.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):(l(t,t.umod(this.m)._forceRed(this)),t)},S.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},S.prototype.add=function(t,i){this._verify2(t,i);var e=t.add(i);return e.cmp(this.m)>=0&&e.isub(this.m),e._forceRed(this)},S.prototype.iadd=function(t,i){this._verify2(t,i);var e=t.iadd(i);return e.cmp(this.m)>=0&&e.isub(this.m),e},S.prototype.sub=function(t,i){this._verify2(t,i);var e=t.sub(i);return e.cmpn(0)<0&&e.iadd(this.m),e._forceRed(this)},S.prototype.isub=function(t,i){this._verify2(t,i);var e=t.isub(i);return e.cmpn(0)<0&&e.iadd(this.m),e},S.prototype.shl=function(t,i){return this._verify1(t),this.imod(t.ushln(i))},S.prototype.imul=function(t,i){return this._verify2(t,i),this.imod(t.imul(i))},S.prototype.mul=function(t,i){return this._verify2(t,i),this.imod(t.mul(i))},S.prototype.isqr=function(t){return this.imul(t,t.clone())},S.prototype.sqr=function(t){return this.mul(t,t)},S.prototype.sqrt=function(t){if(t.isZero())return t.clone();var i=this.m.andln(3);if(r(i%2==1),3===i){var e=this.m.add(new h(1)).iushrn(2);return this.pow(t,e)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);r(!n.isZero());var s=new h(1).toRed(this),u=s.redNeg(),a=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new h(2*l*l).toRed(this);0!==this.pow(l,a).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,n),c=this.pow(t,n.addn(1).iushrn(1)),p=this.pow(t,n),m=o;0!==p.cmp(s);){for(var d=p,v=0;0!==d.cmp(s);v++)d=d.redSqr();r(v<m);var y=this.pow(f,new h(1).iushln(m-v-1));c=c.redMul(y),f=y.redSqr(),p=p.redMul(f),m=v}return c},S.prototype.invm=function(t){var i=t._invmp(this.m);return 0!==i.negative?(i.negative=0,this.imod(i).redNeg()):this.imod(i)},S.prototype.pow=function(t,i){if(i.isZero())return new h(1).toRed(this);if(0===i.cmpn(1))return t.clone();var e=new Array(16);e[0]=new h(1).toRed(this),e[1]=t;for(var r=2;r<e.length;r++)e[r]=this.mul(e[r-1],t);var n=e[0],o=0,s=0,u=i.bitLength()%26;for(0===u&&(u=26),r=i.length-1;r>=0;r--){for(var a=i.words[r],l=u-1;l>=0;l--){var f=a>>l&1;n!==e[0]&&(n=this.sqr(n)),0!==f||0!==o?(o<<=1,o|=f,(4===++s||0===r&&0===l)&&(n=this.mul(n,e[o]),s=0,o=0)):s=0}u=26}return n},S.prototype.convertTo=function(t){var i=t.umod(this.m);return i===t?i.clone():i},S.prototype.convertFrom=function(t){var i=t.clone();return i.red=null,i},h.mont=function(t){return new A(t)},n(A,S),A.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},A.prototype.convertFrom=function(t){var i=this.imod(t.mul(this.rinv));return i.red=null,i},A.prototype.imul=function(t,i){if(t.isZero()||i.isZero())return t.words[0]=0,t.length=1,t;var e=t.imul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),h=n;return n.cmp(this.m)>=0?h=n.isub(this.m):n.cmpn(0)<0&&(h=n.iadd(this.m)),h._forceRed(this)},A.prototype.mul=function(t,i){if(t.isZero()||i.isZero())return new h(0)._forceRed(this);var e=t.mul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},A.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=e.nmd(t),this)},44946:function(t){"use strict";t.exports=JSON.parse('{"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}}')}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,