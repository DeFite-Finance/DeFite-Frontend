(self.webpackChunkhugiris_nft=self.webpackChunkhugiris_nft||[]).push([[1715],{93608:function(e,t,r){var n=r(23085).Buffer;const o=r(59494),s=r(3091),c=r(86266),i=(r(73390),new c.ec("secp256k1")),{keccak256:l,keccak256s:a}=r(1538),u=e=>{const t=a(e.slice(2));let r="0x";for(let n=0;n<40;n++)r+=parseInt(t[n+2],16)>7?e[n+2].toUpperCase():e[n+2];return r},p=e=>{const t=new n(e.slice(2),"hex"),r="0x"+i.keyFromPrivate(t).getPublic(!1,"hex").slice(2),o=l(r);return{address:u("0x"+o.slice(-40)),privateKey:e}},g=([e,t,r])=>o.flatten([t,r,e]),f=e=>[o.slice(64,o.length(e),e),o.slice(0,32,e),o.slice(32,64,e)],h=e=>(t,r)=>{const c=i.keyFromPrivate(new n(r.slice(2),"hex")).sign(new n(t.slice(2),"hex"),{canonical:!0});return g([s.fromString(o.fromNumber(e+c.recoveryParam)),o.pad(32,o.fromNat("0x"+c.r.toString(16))),o.pad(32,o.fromNat("0x"+c.s.toString(16)))])},y=h(27);e.exports={create:e=>{const t=l(o.concat(o.random(32),e||o.random(32))),r=o.concat(o.concat(o.random(32),t),o.random(32)),n=l(r);return p(n)},toChecksum:u,fromPrivate:p,sign:y,makeSigner:h,recover:(e,t)=>{const r=f(t),s={v:o.toNumber(r[0]),r:r[1].slice(2),s:r[2].slice(2)},c="0x"+i.recoverPubKey(new n(e.slice(2),"hex"),s,s.v<2?s.v:1-s.v%2).encode("hex",!1).slice(2),a=l(c);return u("0x"+a.slice(-40))},encodeSignature:g,decodeSignature:f}},50458:function(e){const t=(e,t)=>{let r=[];for(var n=0;n<e;++n)r.push(t(n));return r};e.exports={generate:t,replicate:(e,r)=>t(e,(()=>r)),concat:(e,t)=>e.concat(t),flatten:e=>{let t=[];for(let r=0,n=e.length;r<n;++r)for(let n=0,o=e[r].length;n<o;++n)t.push(e[r][n]);return t},chunksOf:(e,t)=>{let r=[];for(let n=0,o=t.length;n<o;n+=e)r.push(t.slice(n,n+e));return r}}},59494:function(e,t,r){r(50458);const n=(e,t)=>parseInt(e.slice(2*t+2,2*t+4),16),o=e=>(e.length-2)/2,s=(e,t)=>t.length===2*e+2?t:s(e,"0x0"+t.slice(2)),c=(e,t)=>t.length===2*e+2?t:c(e,t+"0"),i=e=>{let t=[];for(let r=2,n=e.length;r<n;r+=2)t.push(parseInt(e.slice(r,r+2),16));return t},l=e=>{let t="0x";for(let r=0,n=e.length;r<n;++r){let n=e[r];t+=(n<16?"0":"")+n.toString(16)}return t};e.exports={random:e=>{let t;t="undefined"!=typeof window&&window.crypto&&window.crypto.getRandomValues?window.crypto.getRandomValues(new Uint8Array(e)):r(55835).randomBytes(e);let n="0x";for(let r=0;r<e;++r)n+=("00"+t[r].toString(16)).slice(-2);return n},length:o,concat:(e,t)=>e.concat(t.slice(2)),flatten:e=>"0x"+e.reduce(((e,t)=>e+t.slice(2)),""),slice:(e,t,r)=>"0x"+r.slice(2*e+2,2*t+2),reverse:e=>{let t="0x";for(let r=0,n=o(e);r<n;++r)t+=e.slice(2*(n-r),2*(n-r+1));return t},pad:s,padRight:c,fromAscii:e=>{let t="0x";for(let r=0;r<e.length;++r)t+=("00"+e.charCodeAt(r).toString(16)).slice(-2);return t},toAscii:e=>{let t="";for(let r=2;r<e.length;r+=2)t+=String.fromCharCode(parseInt(e.slice(r,r+2),16));return t},fromString:e=>{const t=e=>{const t=e.toString(16);return t.length<2?"0"+t:t};let r="0x";for(let n=0;n!=e.length;n++){let o=e.charCodeAt(n);if(o<128)r+=t(o);else{if(o<2048)r+=t(o>>6|192);else{if(o>55295&&o<56320){if(++n==e.length)return null;let s=e.charCodeAt(n);if(s<56320||s>57343)return null;o=65536+((1023&o)<<10)+(1023&s),r+=t(o>>18|240),r+=t(o>>12&63|128)}else r+=t(o>>12|224);r+=t(o>>6&63|128)}r+=t(63&o|128)}}return r},toString:e=>{let t="",r=0,s=o(e);for(;r<s;){let o=n(e,r++);if(o>127){if(o>191&&o<224){if(r>=s)return null;o=(31&o)<<6|63&n(e,r)}else if(o>223&&o<240){if(r+1>=s)return null;o=(15&o)<<12|(63&n(e,r))<<6|63&n(e,++r)}else{if(!(o>239&&o<248))return null;if(r+2>=s)return null;o=(7&o)<<18|(63&n(e,r))<<12|(63&n(e,++r))<<6|63&n(e,++r)}++r}if(o<=65535)t+=String.fromCharCode(o);else{if(!(o<=1114111))return null;o-=65536,t+=String.fromCharCode(o>>10|55296),t+=String.fromCharCode(1023&o|56320)}}return t},fromNumber:e=>{let t=e.toString(16);return t.length%2==0?"0x"+t:"0x0"+t},toNumber:e=>parseInt(e.slice(2),16),fromNat:e=>"0x0"===e?"0x":e.length%2==0?e:"0x0"+e.slice(2),toNat:e=>"0"===e[2]?"0x"+e.slice(3):e,fromArray:l,toArray:i,fromUint8Array:e=>l([].slice.call(e,0)),toUint8Array:e=>new Uint8Array(i(e))}},1538:function(e){const t="0123456789abcdef".split(""),r=[1,256,65536,16777216],n=[0,8,16,24],o=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],s=e=>{var t,r,n,s,c,i,l,a,u,p,g,f,h,y,d,m,x,k,b,B,S,_,v,w,C,A,T,H,N,I,P,U,F,L,R,E,V,W,j,K,M,z,G,q,D,O,Q,J,X,Y,Z,$,ee,te,re,ne,oe,se,ce,ie,le,ae,ue;for(n=0;n<48;n+=2)s=e[0]^e[10]^e[20]^e[30]^e[40],c=e[1]^e[11]^e[21]^e[31]^e[41],i=e[2]^e[12]^e[22]^e[32]^e[42],l=e[3]^e[13]^e[23]^e[33]^e[43],a=e[4]^e[14]^e[24]^e[34]^e[44],u=e[5]^e[15]^e[25]^e[35]^e[45],p=e[6]^e[16]^e[26]^e[36]^e[46],g=e[7]^e[17]^e[27]^e[37]^e[47],t=(f=e[8]^e[18]^e[28]^e[38]^e[48])^(i<<1|l>>>31),r=(h=e[9]^e[19]^e[29]^e[39]^e[49])^(l<<1|i>>>31),e[0]^=t,e[1]^=r,e[10]^=t,e[11]^=r,e[20]^=t,e[21]^=r,e[30]^=t,e[31]^=r,e[40]^=t,e[41]^=r,t=s^(a<<1|u>>>31),r=c^(u<<1|a>>>31),e[2]^=t,e[3]^=r,e[12]^=t,e[13]^=r,e[22]^=t,e[23]^=r,e[32]^=t,e[33]^=r,e[42]^=t,e[43]^=r,t=i^(p<<1|g>>>31),r=l^(g<<1|p>>>31),e[4]^=t,e[5]^=r,e[14]^=t,e[15]^=r,e[24]^=t,e[25]^=r,e[34]^=t,e[35]^=r,e[44]^=t,e[45]^=r,t=a^(f<<1|h>>>31),r=u^(h<<1|f>>>31),e[6]^=t,e[7]^=r,e[16]^=t,e[17]^=r,e[26]^=t,e[27]^=r,e[36]^=t,e[37]^=r,e[46]^=t,e[47]^=r,t=p^(s<<1|c>>>31),r=g^(c<<1|s>>>31),e[8]^=t,e[9]^=r,e[18]^=t,e[19]^=r,e[28]^=t,e[29]^=r,e[38]^=t,e[39]^=r,e[48]^=t,e[49]^=r,y=e[0],d=e[1],O=e[11]<<4|e[10]>>>28,Q=e[10]<<4|e[11]>>>28,H=e[20]<<3|e[21]>>>29,N=e[21]<<3|e[20]>>>29,ie=e[31]<<9|e[30]>>>23,le=e[30]<<9|e[31]>>>23,z=e[40]<<18|e[41]>>>14,G=e[41]<<18|e[40]>>>14,L=e[2]<<1|e[3]>>>31,R=e[3]<<1|e[2]>>>31,m=e[13]<<12|e[12]>>>20,x=e[12]<<12|e[13]>>>20,J=e[22]<<10|e[23]>>>22,X=e[23]<<10|e[22]>>>22,I=e[33]<<13|e[32]>>>19,P=e[32]<<13|e[33]>>>19,ae=e[42]<<2|e[43]>>>30,ue=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,re=e[4]<<30|e[5]>>>2,E=e[14]<<6|e[15]>>>26,V=e[15]<<6|e[14]>>>26,k=e[25]<<11|e[24]>>>21,b=e[24]<<11|e[25]>>>21,Y=e[34]<<15|e[35]>>>17,Z=e[35]<<15|e[34]>>>17,U=e[45]<<29|e[44]>>>3,F=e[44]<<29|e[45]>>>3,w=e[6]<<28|e[7]>>>4,C=e[7]<<28|e[6]>>>4,ne=e[17]<<23|e[16]>>>9,oe=e[16]<<23|e[17]>>>9,W=e[26]<<25|e[27]>>>7,j=e[27]<<25|e[26]>>>7,B=e[36]<<21|e[37]>>>11,S=e[37]<<21|e[36]>>>11,$=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,q=e[8]<<27|e[9]>>>5,D=e[9]<<27|e[8]>>>5,A=e[18]<<20|e[19]>>>12,T=e[19]<<20|e[18]>>>12,se=e[29]<<7|e[28]>>>25,ce=e[28]<<7|e[29]>>>25,K=e[38]<<8|e[39]>>>24,M=e[39]<<8|e[38]>>>24,_=e[48]<<14|e[49]>>>18,v=e[49]<<14|e[48]>>>18,e[0]=y^~m&k,e[1]=d^~x&b,e[10]=w^~A&H,e[11]=C^~T&N,e[20]=L^~E&W,e[21]=R^~V&j,e[30]=q^~O&J,e[31]=D^~Q&X,e[40]=te^~ne&se,e[41]=re^~oe&ce,e[2]=m^~k&B,e[3]=x^~b&S,e[12]=A^~H&I,e[13]=T^~N&P,e[22]=E^~W&K,e[23]=V^~j&M,e[32]=O^~J&Y,e[33]=Q^~X&Z,e[42]=ne^~se&ie,e[43]=oe^~ce&le,e[4]=k^~B&_,e[5]=b^~S&v,e[14]=H^~I&U,e[15]=N^~P&F,e[24]=W^~K&z,e[25]=j^~M&G,e[34]=J^~Y&$,e[35]=X^~Z&ee,e[44]=se^~ie&ae,e[45]=ce^~le&ue,e[6]=B^~_&y,e[7]=S^~v&d,e[16]=I^~U&w,e[17]=P^~F&C,e[26]=K^~z&L,e[27]=M^~G&R,e[36]=Y^~$&q,e[37]=Z^~ee&D,e[46]=ie^~ae&te,e[47]=le^~ue&re,e[8]=_^~y&m,e[9]=v^~d&x,e[18]=U^~w&A,e[19]=F^~C&T,e[28]=z^~L&E,e[29]=G^~R&V,e[38]=$^~q&O,e[39]=ee^~D&Q,e[48]=ae^~te&ne,e[49]=ue^~re&oe,e[0]^=o[n],e[1]^=o[n+1]},c=e=>o=>{var c;if("0x"===o.slice(0,2)){c=[];for(var i=2,l=o.length;i<l;i+=2)c.push(parseInt(o.slice(i,i+2),16))}else c=o;return((e,o)=>{for(var c,i=o.length,l=e.blocks,a=e.blockCount<<2,u=e.blockCount,p=e.outputBlocks,g=e.s,f=0;f<i;){if(e.reset)for(e.reset=!1,l[0]=e.block,d=1;d<u+1;++d)l[d]=0;if("string"!=typeof o)for(d=e.start;f<i&&d<a;++f)l[d>>2]|=o[f]<<n[3&d++];else for(d=e.start;f<i&&d<a;++f)(c=o.charCodeAt(f))<128?l[d>>2]|=c<<n[3&d++]:c<2048?(l[d>>2]|=(192|c>>6)<<n[3&d++],l[d>>2]|=(128|63&c)<<n[3&d++]):c<55296||c>=57344?(l[d>>2]|=(224|c>>12)<<n[3&d++],l[d>>2]|=(128|c>>6&63)<<n[3&d++],l[d>>2]|=(128|63&c)<<n[3&d++]):(c=65536+((1023&c)<<10|1023&o.charCodeAt(++f)),l[d>>2]|=(240|c>>18)<<n[3&d++],l[d>>2]|=(128|c>>12&63)<<n[3&d++],l[d>>2]|=(128|c>>6&63)<<n[3&d++],l[d>>2]|=(128|63&c)<<n[3&d++]);if(e.lastByteIndex=d,d>=a){for(e.start=d-a,e.block=l[u],d=0;d<u;++d)g[d]^=l[d];s(g),e.reset=!0}else e.start=d}if(l[(d=e.lastByteIndex)>>2]|=r[3&d],e.lastByteIndex===a)for(l[0]=l[u],d=1;d<u+1;++d)l[d]=0;for(l[u-1]|=2147483648,d=0;d<u;++d)g[d]^=l[d];s(g);for(var h,y="",d=0,m=0;m<p;){for(d=0;d<u&&m<p;++d,++m)h=g[d],y+=t[h>>4&15]+t[15&h]+t[h>>12&15]+t[h>>8&15]+t[h>>20&15]+t[h>>16&15]+t[h>>28&15]+t[h>>24&15];m%u==0&&(s(g),d=0)}return"0x"+y})((e=>{return{blocks:[],reset:!0,block:0,start:0,blockCount:1600-(e<<1)>>5,outputBlocks:e>>5,s:(t=[0,0,0,0,0,0,0,0,0,0],[].concat(t,t,t,t,t))};var t})(e),c)};e.exports={keccak256:c(256),keccak512:c(512),keccak256s:c(256),keccak512s:c(512)}},3091:function(e,t,r){const n=r(13550),o=r(59494),s=e=>new n(e.slice(2),16),c=e=>{const t="0x"+("0x"===e.slice(0,2)?new n(e.slice(2),16):new n(e,10)).toString("hex");return"0x0"===t?"0x":t},i=e=>"string"==typeof e?/^0x/.test(e)?e:"0x"+e:"0x"+new n(e).toString("hex"),l=e=>s(e).toNumber(),a=e=>(t,r)=>"0x"+s(t)[e](s(r)).toString("hex"),u=a("add"),p=a("mul"),g=a("div"),f=a("sub");e.exports={toString:e=>s(e).toString(10),fromString:c,toNumber:l,fromNumber:i,toEther:e=>l(g(e,c("10000000000")))/1e8,fromEther:e=>p(i(Math.floor(1e8*e)),c("10000000000")),toUint256:e=>o.pad(32,e),add:u,mul:p,div:g,sub:f}},73390:function(e){e.exports={encode:e=>{const t=e=>{return(t=e.toString(16)).length%2==0?t:"0"+t;var t},r=(e,r)=>e<56?t(r+e):t(r+t(e).length/2+55)+t(e),n=e=>{if("string"==typeof e){const t=e.slice(2);return(2!=t.length||t>="80"?r(t.length/2,128):"")+t}{const t=e.map(n).join("");return r(t.length/2,192)+t}};return"0x"+n(e)},decode:e=>{let t=2;const r=()=>{if(t>=e.length)throw"";const r=e.slice(t,t+2);return r<"80"?(t+=2,"0x"+r):r<"c0"?o():s()},n=()=>{const r=parseInt(e.slice(t,t+=2),16)%64;return r<56?r:parseInt(e.slice(t,t+=2*(r-55)),16)},o=()=>{const r=n();return"0x"+e.slice(t,t+=2*r)},s=()=>{const e=2*n()+t;let o=[];for(;t<e;)o.push(r());return o};try{return r()}catch(e){return[]}}}},75682:function(e,t,r){const n=r(47529),o=r(23420)();function s(e){this.currentProvider=e}function c(e){return function(){const t=this;var r=[].slice.call(arguments),n=r.pop();t.sendAsync({method:e,params:r},n)}}function i(e,t){return function(){const r=this;var n=[].slice.call(arguments),o=n.pop();n.length<e&&n.push("latest"),r.sendAsync({method:t,params:n},o)}}e.exports=s,s.prototype.getBalance=i(2,"eth_getBalance"),s.prototype.getCode=i(2,"eth_getCode"),s.prototype.getTransactionCount=i(2,"eth_getTransactionCount"),s.prototype.getStorageAt=i(3,"eth_getStorageAt"),s.prototype.call=i(2,"eth_call"),s.prototype.protocolVersion=c("eth_protocolVersion"),s.prototype.syncing=c("eth_syncing"),s.prototype.coinbase=c("eth_coinbase"),s.prototype.mining=c("eth_mining"),s.prototype.hashrate=c("eth_hashrate"),s.prototype.gasPrice=c("eth_gasPrice"),s.prototype.accounts=c("eth_accounts"),s.prototype.blockNumber=c("eth_blockNumber"),s.prototype.getBlockTransactionCountByHash=c("eth_getBlockTransactionCountByHash"),s.prototype.getBlockTransactionCountByNumber=c("eth_getBlockTransactionCountByNumber"),s.prototype.getUncleCountByBlockHash=c("eth_getUncleCountByBlockHash"),s.prototype.getUncleCountByBlockNumber=c("eth_getUncleCountByBlockNumber"),s.prototype.sign=c("eth_sign"),s.prototype.sendTransaction=c("eth_sendTransaction"),s.prototype.sendRawTransaction=c("eth_sendRawTransaction"),s.prototype.estimateGas=c("eth_estimateGas"),s.prototype.getBlockByHash=c("eth_getBlockByHash"),s.prototype.getBlockByNumber=c("eth_getBlockByNumber"),s.prototype.getTransactionByHash=c("eth_getTransactionByHash"),s.prototype.getTransactionByBlockHashAndIndex=c("eth_getTransactionByBlockHashAndIndex"),s.prototype.getTransactionByBlockNumberAndIndex=c("eth_getTransactionByBlockNumberAndIndex"),s.prototype.getTransactionReceipt=c("eth_getTransactionReceipt"),s.prototype.getUncleByBlockHashAndIndex=c("eth_getUncleByBlockHashAndIndex"),s.prototype.getUncleByBlockNumberAndIndex=c("eth_getUncleByBlockNumberAndIndex"),s.prototype.getCompilers=c("eth_getCompilers"),s.prototype.compileLLL=c("eth_compileLLL"),s.prototype.compileSolidity=c("eth_compileSolidity"),s.prototype.compileSerpent=c("eth_compileSerpent"),s.prototype.newFilter=c("eth_newFilter"),s.prototype.newBlockFilter=c("eth_newBlockFilter"),s.prototype.newPendingTransactionFilter=c("eth_newPendingTransactionFilter"),s.prototype.uninstallFilter=c("eth_uninstallFilter"),s.prototype.getFilterChanges=c("eth_getFilterChanges"),s.prototype.getFilterLogs=c("eth_getFilterLogs"),s.prototype.getLogs=c("eth_getLogs"),s.prototype.getWork=c("eth_getWork"),s.prototype.submitWork=c("eth_submitWork"),s.prototype.submitHashrate=c("eth_submitHashrate"),s.prototype.sendAsync=function(e,t){var r;this.currentProvider.sendAsync((r=e,n({id:o(),jsonrpc:"2.0",params:[]},r)),(function(e,r){if(!e&&r.error&&(e=new Error("EthQuery - RPC Error - "+r.error.message)),e)return t(e);t(null,r.result)}))}},2843:function(e,t,r){const n=r(21964),o=r(68142);function s(e){const t=new Error("Expect argument to be non-empty array");if("object"!=typeof e||!e.length)throw t;const r=e.map((function(e){return"bytes"===e.type?n.toBuffer(e.value):e.value})),s=e.map((function(e){return e.type})),c=e.map((function(e){if(!e.name)throw t;return e.type+" "+e.name}));return o.soliditySHA3(["bytes32","bytes32"],[o.soliditySHA3(new Array(e.length).fill("string"),c),o.soliditySHA3(s,r)])}function c(e,t){const r=n.toBuffer(t),o=n.fromRpcSig(r);return n.ecrecover(e,o.v,o.r,o.s)}function i(e){const t=n.toBuffer(e.data);return c(n.hashPersonalMessage(t),e.sig)}function l(e,t){for(var r=""+e;r.length<t;)r="0"+r;return r}e.exports={concatSig:function(e,t,r){const o=n.fromSigned(t),s=n.fromSigned(r),c=n.bufferToInt(e),i=l(n.toUnsigned(o).toString("hex"),64),a=l(n.toUnsigned(s).toString("hex"),64),u=n.stripHexPrefix(n.intToHex(c));return n.addHexPrefix(i.concat(a,u)).toString("hex")},normalize:function(e){if(e){if("number"==typeof e){const t=n.toBuffer(e);e=n.bufferToHex(t)}if("string"!=typeof e){var t="eth-sig-util.normalize() requires hex string or integer input.";throw new Error(t+=" received "+typeof e+": "+e)}return n.addHexPrefix(e.toLowerCase())}},personalSign:function(e,t){var r=n.toBuffer(t.data),o=n.hashPersonalMessage(r),s=n.ecsign(o,e);return n.bufferToHex(this.concatSig(s.v,s.r,s.s))},recoverPersonalSignature:function(e){const t=i(e),r=n.publicToAddress(t);return n.bufferToHex(r)},extractPublicKey:function(e){return"0x"+i(e).toString("hex")},typedSignatureHash:function(e){const t=s(e);return n.bufferToHex(t)},signTypedData:function(e,t){const r=s(t.data),o=n.ecsign(r,e);return n.bufferToHex(this.concatSig(o.v,o.r,o.s))},recoverTypedSignature:function(e){const t=c(s(e.data),e.sig),r=n.publicToAddress(t);return n.bufferToHex(r)}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,