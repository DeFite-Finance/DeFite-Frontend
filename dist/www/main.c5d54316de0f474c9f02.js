!function(){"use strict";var e,n,t,r,o,i={7108:function(e,n,t){var r=t(85893),o=t(67294),i=t(73935),a=t(25108);const c=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function l(e,n){navigator.serviceWorker.register(e).then((e=>{e.onupdatefound=()=>{const t=e.installing;null!=t&&(t.onstatechange=()=>{"installed"===t.state&&(navigator.serviceWorker.controller?(a.log("New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA."),n&&n.onUpdate&&n.onUpdate(e)):(a.log("Content is cached for offline use."),n&&n.onSuccess&&n.onSuccess(e)))})}})).catch((e=>{a.error("Error during service worker registration:",e)}))}var s=e=>{e&&e instanceof Function&&Promise.all([t.e(4658),t.e(3738),t.e(944),t.e(813),t.e(9521),t.e(4912),t.e(9557),t.e(8384),t.e(2827),t.e(1715),t.e(9806),t.e(3278),t.e(1565),t.e(4735),t.e(4625),t.e(2329),t.e(6882),t.e(1106),t.e(5187),t.e(2972),t.e(4581),t.e(2506),t.e(8825),t.e(8490),t.e(1680),t.e(3964),t.e(7715),t.e(9842),t.e(5526),t.e(1771),t.e(8811),t.e(4211),t.e(2492),t.e(3923),t.e(483),t.e(9920),t.e(5457),t.e(7010),t.e(7219),t.e(8059),t.e(4245),t.e(3707),t.e(4962)]).then(t.bind(t,82131)).then((({getCLS:n,getFID:t,getFCP:r,getLCP:o,getTTFB:i})=>{n(e),t(e),r(e),o(e),i(e)}))},d=t(73727);const u=(0,o.lazy)((()=>Promise.all([t.e(4658),t.e(3738),t.e(944),t.e(813),t.e(9521),t.e(4912),t.e(9557),t.e(8384),t.e(2827),t.e(1715),t.e(9806),t.e(3278),t.e(1565),t.e(4735),t.e(4625),t.e(2329),t.e(6882),t.e(1106),t.e(5187),t.e(2972),t.e(4581),t.e(2506),t.e(8825),t.e(8490),t.e(1680),t.e(3964),t.e(7715),t.e(9842),t.e(5526),t.e(1771),t.e(8811),t.e(4211),t.e(2492),t.e(3923),t.e(483),t.e(9920),t.e(5457),t.e(7010),t.e(7219),t.e(8059),t.e(4245),t.e(3707),t.e(4962),t.e(9554)]).then(t.bind(t,11758)))),f=(0,o.lazy)((()=>Promise.all([t.e(4658),t.e(3738),t.e(944),t.e(813),t.e(9521),t.e(4912),t.e(9557),t.e(8384),t.e(2827),t.e(1715),t.e(9806),t.e(3278),t.e(1565),t.e(4735),t.e(4625),t.e(2329),t.e(6882),t.e(1106),t.e(5187),t.e(2972),t.e(4581),t.e(2506),t.e(8825),t.e(8490),t.e(1680),t.e(3964),t.e(7715),t.e(9842),t.e(5526),t.e(1771),t.e(8811),t.e(4211),t.e(2492),t.e(3923),t.e(483),t.e(9920),t.e(5457),t.e(7010),t.e(7219),t.e(8059),t.e(4245),t.e(3707),t.e(4962),t.e(2587)]).then(t.bind(t,42052))));i.render((0,r.jsx)(r.Fragment,{children:(0,r.jsx)(o.StrictMode,{children:(0,r.jsx)(d.VK,{children:(0,r.jsx)(o.Suspense,{fallback:(0,r.jsx)("div",{id:"loading",children:(0,r.jsx)("span",{id:"loading-text",children:"Flying to iRIS ..."},void 0)},void 0),children:(0,r.jsx)(u,{children:(0,r.jsx)(f,{},void 0)},void 0)},void 0)},void 0)},void 0)},void 0),document.getElementById("root")),function(e){if("serviceWorker"in navigator){if(new URL("MISSING_ENV_VAR".PUBLIC_URL,window.location.href).origin!==window.location.origin)return;window.addEventListener("load",(()=>{const n=`${"MISSING_ENV_VAR".PUBLIC_URL}/service-worker.js`;c?(!function(e,n){fetch(e,{headers:{"Service-Worker":"script"}}).then((t=>{const r=t.headers.get("content-type");404===t.status||null!=r&&-1===r.indexOf("javascript")?navigator.serviceWorker.ready.then((e=>{e.unregister().then((()=>{window.location.reload()}))})):l(e,n)})).catch((()=>{a.log("No internet connection found. App is running in offline mode.")}))}(n,e),navigator.serviceWorker.ready.then((()=>{a.log("This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA")}))):l(n,e)}))}}(),s()}},a={};function c(e){var n=a[e];if(void 0!==n)return n.exports;var t=a[e]={id:e,loaded:!1,exports:{}};return i[e].call(t.exports,t,t.exports,c),t.loaded=!0,t.exports}c.m=i,c.amdO={},e=[],c.O=function(n,t,r,o){if(!t){var i=1/0;for(d=0;d<e.length;d++){t=e[d][0],r=e[d][1],o=e[d][2];for(var a=!0,l=0;l<t.length;l++)(!1&o||i>=o)&&Object.keys(c.O).every((function(e){return c.O[e](t[l])}))?t.splice(l--,1):(a=!1,o<i&&(i=o));if(a){e.splice(d--,1);var s=r();void 0!==s&&(n=s)}}return n}o=o||0;for(var d=e.length;d>0&&e[d-1][2]>o;d--)e[d]=e[d-1];e[d]=[t,r,o]},c.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(n,{a:n}),n},c.d=function(e,n){for(var t in n)c.o(n,t)&&!c.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},c.f={},c.e=function(e){return Promise.all(Object.keys(c.f).reduce((function(n,t){return c.f[t](e,n),n}),[]))},c.u=function(e){return e+"."+{1285:"86601e98af9bab403a29",2587:"d6ac40ed01339641b220",3827:"fc812359c612af018026",5823:"1f7a5ca816ff6c2211e0",6418:"5988dd8d60cad9fbeac5",6563:"9a3dc65b6cf3026f5117",9428:"7e4929a90179b88bb729",9554:"b2624d90c775d5abdc8c"}[e]+".js"},c.miniCssF=function(e){return e+".css"},c.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),c.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n={},t="hugiris-nft:",c.l=function(e,r,o,i){if(n[e])n[e].push(r);else{var a,l;if(void 0!==o)for(var s=document.getElementsByTagName("script"),d=0;d<s.length;d++){var u=s[d];if(u.getAttribute("src")==e||u.getAttribute("data-webpack")==t+o){a=u;break}}a||(l=!0,(a=document.createElement("script")).charset="utf-8",a.timeout=120,c.nc&&a.setAttribute("nonce",c.nc),a.setAttribute("data-webpack",t+o),a.src=e),n[e]=[r];var f=function(t,r){a.onerror=a.onload=null,clearTimeout(h);var o=n[e];if(delete n[e],a.parentNode&&a.parentNode.removeChild(a),o&&o.forEach((function(e){return e(r)})),t)return t(r)},h=setTimeout(f.bind(null,void 0,{type:"timeout",target:a}),12e4);a.onerror=f.bind(null,a.onerror),a.onload=f.bind(null,a.onload),l&&document.head.appendChild(a)}},c.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e},c.p="../dist/www/",r=function(e){return new Promise((function(n,t){var r=c.miniCssF(e),o=c.p+r;if(function(e,n){for(var t=document.getElementsByTagName("link"),r=0;r<t.length;r++){var o=(a=t[r]).getAttribute("data-href")||a.getAttribute("href");if("stylesheet"===a.rel&&(o===e||o===n))return a}var i=document.getElementsByTagName("style");for(r=0;r<i.length;r++){var a;if((o=(a=i[r]).getAttribute("data-href"))===e||o===n)return a}}(r,o))return n();!function(e,n,t,r){var o=document.createElement("link");o.rel="stylesheet",o.type="text/css",o.onerror=o.onload=function(i){if(o.onerror=o.onload=null,"load"===i.type)t();else{var a=i&&("load"===i.type?"missing":i.type),c=i&&i.target&&i.target.href||n,l=new Error("Loading CSS chunk "+e+" failed.\n("+c+")");l.code="CSS_CHUNK_LOAD_FAILED",l.type=a,l.request=c,o.parentNode.removeChild(o),r(l)}},o.href=n,document.head.appendChild(o)}(e,o,n,t)}))},o={179:0},c.f.miniCss=function(e,n){o[e]?n.push(o[e]):0!==o[e]&&{3827:1,5823:1,6418:1,9428:1}[e]&&n.push(o[e]=r(e).then((function(){o[e]=0}),(function(n){throw delete o[e],n})))},function(){var e={179:0,944:0};c.f.j=function(n,t){var r=c.o(e,n)?e[n]:void 0;if(0!==r)if(r)t.push(r[2]);else if(944!=n){var o=new Promise((function(t,o){r=e[n]=[t,o]}));t.push(r[2]=o);var i=c.p+c.u(n),a=new Error;c.l(i,(function(t){if(c.o(e,n)&&(0!==(r=e[n])&&(e[n]=void 0),r)){var o=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;a.message="Loading chunk "+n+" failed.\n("+o+": "+i+")",a.name="ChunkLoadError",a.type=o,a.request=i,r[1](a)}}),"chunk-"+n,n)}else e[n]=0},c.O.j=function(n){return 0===e[n]};var n=function(n,t){var r,o,i=t[0],a=t[1],l=t[2],s=0;if(i.some((function(n){return 0!==e[n]}))){for(r in a)c.o(a,r)&&(c.m[r]=a[r]);if(l)var d=l(c)}for(n&&n(t);s<i.length;s++)o=i[s],c.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return c.O(d)},t=self.webpackChunkhugiris_nft=self.webpackChunkhugiris_nft||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))}();var l=c.O(void 0,[4658,3738,944,813,9521,4912,9557,8384,2827,1715,9806,3278,1565,4735,4625,2329,6882,1106,5187,2972,4581,2506,8825,8490,1680,3964,7715,9842,5526,1771,8811,4211,2492,3923,483,9920,5457,7010,7219,8059,4245,3707,4962],(function(){return c(7108)}));l=c.O(l)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,