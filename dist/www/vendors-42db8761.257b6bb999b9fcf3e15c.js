(self.webpackChunkhugiris_nft=self.webpackChunkhugiris_nft||[]).push([[1106],{94278:function(t,i,e){"use strict";var r=e(43614),n=e(83206),o=new r(0),h=new r(-1),s={noether:"0",wei:"1",kwei:"1000",Kwei:"1000",babbage:"1000",femtoether:"1000",mwei:"1000000",Mwei:"1000000",lovelace:"1000000",picoether:"1000000",gwei:"1000000000",Gwei:"1000000000",shannon:"1000000000",nanoether:"1000000000",nano:"1000000000",szabo:"1000000000000",microether:"1000000000000",micro:"1000000000000",finney:"1000000000000000",milliether:"1000000000000000",milli:"1000000000000000",ether:"1000000000000000000",kether:"1000000000000000000000",grand:"1000000000000000000000",mether:"1000000000000000000000000",gether:"1000000000000000000000000000",tether:"1000000000000000000000000000000"};function u(t){var i=t?t.toLowerCase():"ether",e=s[i];if("string"!=typeof e)throw new Error("[ethjs-unit] the unit provided "+t+" doesn't exists, please use the one of the following units "+JSON.stringify(s,null,2));return new r(e,10)}function a(t){if("string"==typeof t){if(!t.match(/^-?[0-9.]+$/))throw new Error("while converting number to string, invalid number value '"+t+"', should be a number matching (^-?[0-9.]+).");return t}if("number"==typeof t)return String(t);if("object"==typeof t&&t.toString&&(t.toTwos||t.dividedToIntegerBy))return t.toPrecision?String(t.toPrecision()):t.toString(10);throw new Error("while converting number to string, invalid number value '"+t+"' type "+typeof t+".")}t.exports={unitMap:s,numberToString:a,getValueOfUnit:u,fromWei:function(t,i,e){var r=n(t),a=r.lt(o),l=u(i),f=s[i].length-1||1,m=e||{};a&&(r=r.mul(h));for(var p=r.mod(l).toString(10);p.length<f;)p="0"+p;m.pad||(p=p.match(/^([0-9]*[1-9]|0)(0*)/)[1]);var d=r.div(l).toString(10);m.commify&&(d=d.replace(/\B(?=(\d{3})+(?!\d))/g,","));var c=d+("0"==p?"":"."+p);return a&&(c="-"+c),c},toWei:function(t,i){var e=a(t),n=u(i),o=s[i].length-1||1,l="-"===e.substring(0,1);if(l&&(e=e.substring(1)),"."===e)throw new Error("[ethjs-unit] while converting number "+t+" to wei, invalid value");var f=e.split(".");if(f.length>2)throw new Error("[ethjs-unit] while converting number "+t+" to wei,  too many decimal points");var m=f[0],p=f[1];if(m||(m="0"),p||(p="0"),p.length>o)throw new Error("[ethjs-unit] while converting number "+t+" to wei, too many decimal places");for(;p.length<o;)p+="0";m=new r(m),p=new r(p);var d=m.mul(n).add(p);return l&&(d=d.mul(h)),new r(d.toString(10),10)}}},43614:function(t,i,e){!function(t,i){"use strict";function r(t,i){if(!t)throw new Error(i||"Assertion failed")}function n(t,i){t.super_=i;var e=function(){};e.prototype=i.prototype,t.prototype=new e,t.prototype.constructor=t}function o(t,i,e){if(o.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==i&&"be"!==i||(e=i,i=10),this._init(t||0,i||10,e||"be"))}var h;"object"==typeof t?t.exports=o:i.BN=o,o.BN=o,o.wordSize=26;try{h=e(48764).Buffer}catch(t){}function s(t,i,e){for(var r=0,n=Math.min(t.length,e),o=i;o<n;o++){var h=t.charCodeAt(o)-48;r<<=4,r|=h>=49&&h<=54?h-49+10:h>=17&&h<=22?h-17+10:15&h}return r}function u(t,i,e,r){for(var n=0,o=Math.min(t.length,e),h=i;h<o;h++){var s=t.charCodeAt(h)-48;n*=r,n+=s>=49?s-49+10:s>=17?s-17+10:s}return n}o.isBN=function(t){return t instanceof o||null!==t&&"object"==typeof t&&t.constructor.wordSize===o.wordSize&&Array.isArray(t.words)},o.max=function(t,i){return t.cmp(i)>0?t:i},o.min=function(t,i){return t.cmp(i)<0?t:i},o.prototype._init=function(t,i,e){if("number"==typeof t)return this._initNumber(t,i,e);if("object"==typeof t)return this._initArray(t,i,e);"hex"===i&&(i=16),r(i===(0|i)&&i>=2&&i<=36);var n=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&n++,16===i?this._parseHex(t,n):this._parseBase(t,i,n),"-"===t[0]&&(this.negative=1),this.strip(),"le"===e&&this._initArray(this.toArray(),i,e)},o.prototype._initNumber=function(t,i,e){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(r(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===e&&this._initArray(this.toArray(),i,e)},o.prototype._initArray=function(t,i,e){if(r("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var o,h,s=0;if("be"===e)for(n=t.length-1,o=0;n>=0;n-=3)h=t[n]|t[n-1]<<8|t[n-2]<<16,this.words[o]|=h<<s&67108863,this.words[o+1]=h>>>26-s&67108863,(s+=24)>=26&&(s-=26,o++);else if("le"===e)for(n=0,o=0;n<t.length;n+=3)h=t[n]|t[n+1]<<8|t[n+2]<<16,this.words[o]|=h<<s&67108863,this.words[o+1]=h>>>26-s&67108863,(s+=24)>=26&&(s-=26,o++);return this.strip()},o.prototype._parseHex=function(t,i){this.length=Math.ceil((t.length-i)/6),this.words=new Array(this.length);for(var e=0;e<this.length;e++)this.words[e]=0;var r,n,o=0;for(e=t.length-6,r=0;e>=i;e-=6)n=s(t,e,e+6),this.words[r]|=n<<o&67108863,this.words[r+1]|=n>>>26-o&4194303,(o+=24)>=26&&(o-=26,r++);e+6!==i&&(n=s(t,i,e+6),this.words[r]|=n<<o&67108863,this.words[r+1]|=n>>>26-o&4194303),this.strip()},o.prototype._parseBase=function(t,i,e){this.words=[0],this.length=1;for(var r=0,n=1;n<=67108863;n*=i)r++;r--,n=n/i|0;for(var o=t.length-e,h=o%r,s=Math.min(o,o-h)+e,a=0,l=e;l<s;l+=r)a=u(t,l,l+r,i),this.imuln(n),this.words[0]+a<67108864?this.words[0]+=a:this._iaddn(a);if(0!==h){var f=1;for(a=u(t,l,t.length,i),l=0;l<h;l++)f*=i;this.imuln(f),this.words[0]+a<67108864?this.words[0]+=a:this._iaddn(a)}},o.prototype.copy=function(t){t.words=new Array(this.length);for(var i=0;i<this.length;i++)t.words[i]=this.words[i];t.length=this.length,t.negative=this.negative,t.red=this.red},o.prototype.clone=function(){var t=new o(null);return this.copy(t),t},o.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},o.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},o.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},o.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var a=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],l=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],f=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function m(t,i,e){e.negative=i.negative^t.negative;var r=t.length+i.length|0;e.length=r,r=r-1|0;var n=0|t.words[0],o=0|i.words[0],h=n*o,s=67108863&h,u=h/67108864|0;e.words[0]=s;for(var a=1;a<r;a++){for(var l=u>>>26,f=67108863&u,m=Math.min(a,i.length-1),p=Math.max(0,a-t.length+1);p<=m;p++){var d=a-p|0;l+=(h=(n=0|t.words[d])*(o=0|i.words[p])+f)/67108864|0,f=67108863&h}e.words[a]=0|f,u=0|l}return 0!==u?e.words[a]=0|u:e.length--,e.strip()}o.prototype.toString=function(t,i){var e;if(i=0|i||1,16===(t=t||10)||"hex"===t){e="";for(var n=0,o=0,h=0;h<this.length;h++){var s=this.words[h],u=(16777215&(s<<n|o)).toString(16);e=0!==(o=s>>>24-n&16777215)||h!==this.length-1?a[6-u.length]+u+e:u+e,(n+=2)>=26&&(n-=26,h--)}for(0!==o&&(e=o.toString(16)+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}if(t===(0|t)&&t>=2&&t<=36){var m=l[t],p=f[t];e="";var d=this.clone();for(d.negative=0;!d.isZero();){var c=d.modn(p).toString(t);e=(d=d.idivn(p)).isZero()?c+e:a[m-c.length]+c+e}for(this.isZero()&&(e="0"+e);e.length%i!=0;)e="0"+e;return 0!==this.negative&&(e="-"+e),e}r(!1,"Base should be between 2 and 36")},o.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},o.prototype.toJSON=function(){return this.toString(16)},o.prototype.toBuffer=function(t,i){return r(void 0!==h),this.toArrayLike(h,t,i)},o.prototype.toArray=function(t,i){return this.toArrayLike(Array,t,i)},o.prototype.toArrayLike=function(t,i,e){var n=this.byteLength(),o=e||Math.max(1,n);r(n<=o,"byte array longer than desired length"),r(o>0,"Requested array length <= 0"),this.strip();var h,s,u="le"===i,a=new t(o),l=this.clone();if(u){for(s=0;!l.isZero();s++)h=l.andln(255),l.iushrn(8),a[s]=h;for(;s<o;s++)a[s]=0}else{for(s=0;s<o-n;s++)a[s]=0;for(s=0;!l.isZero();s++)h=l.andln(255),l.iushrn(8),a[o-s-1]=h}return a},Math.clz32?o.prototype._countBits=function(t){return 32-Math.clz32(t)}:o.prototype._countBits=function(t){var i=t,e=0;return i>=4096&&(e+=13,i>>>=13),i>=64&&(e+=7,i>>>=7),i>=8&&(e+=4,i>>>=4),i>=2&&(e+=2,i>>>=2),e+i},o.prototype._zeroBits=function(t){if(0===t)return 26;var i=t,e=0;return 0==(8191&i)&&(e+=13,i>>>=13),0==(127&i)&&(e+=7,i>>>=7),0==(15&i)&&(e+=4,i>>>=4),0==(3&i)&&(e+=2,i>>>=2),0==(1&i)&&e++,e},o.prototype.bitLength=function(){var t=this.words[this.length-1],i=this._countBits(t);return 26*(this.length-1)+i},o.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,i=0;i<this.length;i++){var e=this._zeroBits(this.words[i]);if(t+=e,26!==e)break}return t},o.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},o.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},o.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},o.prototype.isNeg=function(){return 0!==this.negative},o.prototype.neg=function(){return this.clone().ineg()},o.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},o.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var i=0;i<t.length;i++)this.words[i]=this.words[i]|t.words[i];return this.strip()},o.prototype.ior=function(t){return r(0==(this.negative|t.negative)),this.iuor(t)},o.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},o.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},o.prototype.iuand=function(t){var i;i=this.length>t.length?t:this;for(var e=0;e<i.length;e++)this.words[e]=this.words[e]&t.words[e];return this.length=i.length,this.strip()},o.prototype.iand=function(t){return r(0==(this.negative|t.negative)),this.iuand(t)},o.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},o.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},o.prototype.iuxor=function(t){var i,e;this.length>t.length?(i=this,e=t):(i=t,e=this);for(var r=0;r<e.length;r++)this.words[r]=i.words[r]^e.words[r];if(this!==i)for(;r<i.length;r++)this.words[r]=i.words[r];return this.length=i.length,this.strip()},o.prototype.ixor=function(t){return r(0==(this.negative|t.negative)),this.iuxor(t)},o.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},o.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},o.prototype.inotn=function(t){r("number"==typeof t&&t>=0);var i=0|Math.ceil(t/26),e=t%26;this._expand(i),e>0&&i--;for(var n=0;n<i;n++)this.words[n]=67108863&~this.words[n];return e>0&&(this.words[n]=~this.words[n]&67108863>>26-e),this.strip()},o.prototype.notn=function(t){return this.clone().inotn(t)},o.prototype.setn=function(t,i){r("number"==typeof t&&t>=0);var e=t/26|0,n=t%26;return this._expand(e+1),this.words[e]=i?this.words[e]|1<<n:this.words[e]&~(1<<n),this.strip()},o.prototype.iadd=function(t){var i,e,r;if(0!==this.negative&&0===t.negative)return this.negative=0,i=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,i=this.isub(t),t.negative=1,i._normSign();this.length>t.length?(e=this,r=t):(e=t,r=this);for(var n=0,o=0;o<r.length;o++)i=(0|e.words[o])+(0|r.words[o])+n,this.words[o]=67108863&i,n=i>>>26;for(;0!==n&&o<e.length;o++)i=(0|e.words[o])+n,this.words[o]=67108863&i,n=i>>>26;if(this.length=e.length,0!==n)this.words[this.length]=n,this.length++;else if(e!==this)for(;o<e.length;o++)this.words[o]=e.words[o];return this},o.prototype.add=function(t){var i;return 0!==t.negative&&0===this.negative?(t.negative=0,i=this.sub(t),t.negative^=1,i):0===t.negative&&0!==this.negative?(this.negative=0,i=t.sub(this),this.negative=1,i):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},o.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var i=this.iadd(t);return t.negative=1,i._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var e,r,n=this.cmp(t);if(0===n)return this.negative=0,this.length=1,this.words[0]=0,this;n>0?(e=this,r=t):(e=t,r=this);for(var o=0,h=0;h<r.length;h++)o=(i=(0|e.words[h])-(0|r.words[h])+o)>>26,this.words[h]=67108863&i;for(;0!==o&&h<e.length;h++)o=(i=(0|e.words[h])+o)>>26,this.words[h]=67108863&i;if(0===o&&h<e.length&&e!==this)for(;h<e.length;h++)this.words[h]=e.words[h];return this.length=Math.max(this.length,h),e!==this&&(this.negative=1),this.strip()},o.prototype.sub=function(t){return this.clone().isub(t)};var p=function(t,i,e){var r,n,o,h=t.words,s=i.words,u=e.words,a=0,l=0|h[0],f=8191&l,m=l>>>13,p=0|h[1],d=8191&p,c=p>>>13,v=0|h[2],g=8191&v,M=v>>>13,y=0|h[3],w=8191&y,b=y>>>13,_=0|h[4],x=8191&_,L=_>>>13,A=0|h[5],k=8191&A,S=A>>>13,E=0|h[6],O=8191&E,j=E>>>13,R=0|h[7],B=8191&R,C=R>>>13,q=0|h[8],N=8191&q,Z=q>>>13,T=0|h[9],P=8191&T,I=T>>>13,z=0|s[0],K=8191&z,F=z>>>13,H=0|s[1],U=8191&H,$=H>>>13,W=0|s[2],D=8191&W,J=W>>>13,G=0|s[3],V=8191&G,Q=G>>>13,X=0|s[4],Y=8191&X,tt=X>>>13,it=0|s[5],et=8191&it,rt=it>>>13,nt=0|s[6],ot=8191&nt,ht=nt>>>13,st=0|s[7],ut=8191&st,at=st>>>13,lt=0|s[8],ft=8191&lt,mt=lt>>>13,pt=0|s[9],dt=8191&pt,ct=pt>>>13;e.negative=t.negative^i.negative,e.length=19;var vt=(a+(r=Math.imul(f,K))|0)+((8191&(n=(n=Math.imul(f,F))+Math.imul(m,K)|0))<<13)|0;a=((o=Math.imul(m,F))+(n>>>13)|0)+(vt>>>26)|0,vt&=67108863,r=Math.imul(d,K),n=(n=Math.imul(d,F))+Math.imul(c,K)|0,o=Math.imul(c,F);var gt=(a+(r=r+Math.imul(f,U)|0)|0)+((8191&(n=(n=n+Math.imul(f,$)|0)+Math.imul(m,U)|0))<<13)|0;a=((o=o+Math.imul(m,$)|0)+(n>>>13)|0)+(gt>>>26)|0,gt&=67108863,r=Math.imul(g,K),n=(n=Math.imul(g,F))+Math.imul(M,K)|0,o=Math.imul(M,F),r=r+Math.imul(d,U)|0,n=(n=n+Math.imul(d,$)|0)+Math.imul(c,U)|0,o=o+Math.imul(c,$)|0;var Mt=(a+(r=r+Math.imul(f,D)|0)|0)+((8191&(n=(n=n+Math.imul(f,J)|0)+Math.imul(m,D)|0))<<13)|0;a=((o=o+Math.imul(m,J)|0)+(n>>>13)|0)+(Mt>>>26)|0,Mt&=67108863,r=Math.imul(w,K),n=(n=Math.imul(w,F))+Math.imul(b,K)|0,o=Math.imul(b,F),r=r+Math.imul(g,U)|0,n=(n=n+Math.imul(g,$)|0)+Math.imul(M,U)|0,o=o+Math.imul(M,$)|0,r=r+Math.imul(d,D)|0,n=(n=n+Math.imul(d,J)|0)+Math.imul(c,D)|0,o=o+Math.imul(c,J)|0;var yt=(a+(r=r+Math.imul(f,V)|0)|0)+((8191&(n=(n=n+Math.imul(f,Q)|0)+Math.imul(m,V)|0))<<13)|0;a=((o=o+Math.imul(m,Q)|0)+(n>>>13)|0)+(yt>>>26)|0,yt&=67108863,r=Math.imul(x,K),n=(n=Math.imul(x,F))+Math.imul(L,K)|0,o=Math.imul(L,F),r=r+Math.imul(w,U)|0,n=(n=n+Math.imul(w,$)|0)+Math.imul(b,U)|0,o=o+Math.imul(b,$)|0,r=r+Math.imul(g,D)|0,n=(n=n+Math.imul(g,J)|0)+Math.imul(M,D)|0,o=o+Math.imul(M,J)|0,r=r+Math.imul(d,V)|0,n=(n=n+Math.imul(d,Q)|0)+Math.imul(c,V)|0,o=o+Math.imul(c,Q)|0;var wt=(a+(r=r+Math.imul(f,Y)|0)|0)+((8191&(n=(n=n+Math.imul(f,tt)|0)+Math.imul(m,Y)|0))<<13)|0;a=((o=o+Math.imul(m,tt)|0)+(n>>>13)|0)+(wt>>>26)|0,wt&=67108863,r=Math.imul(k,K),n=(n=Math.imul(k,F))+Math.imul(S,K)|0,o=Math.imul(S,F),r=r+Math.imul(x,U)|0,n=(n=n+Math.imul(x,$)|0)+Math.imul(L,U)|0,o=o+Math.imul(L,$)|0,r=r+Math.imul(w,D)|0,n=(n=n+Math.imul(w,J)|0)+Math.imul(b,D)|0,o=o+Math.imul(b,J)|0,r=r+Math.imul(g,V)|0,n=(n=n+Math.imul(g,Q)|0)+Math.imul(M,V)|0,o=o+Math.imul(M,Q)|0,r=r+Math.imul(d,Y)|0,n=(n=n+Math.imul(d,tt)|0)+Math.imul(c,Y)|0,o=o+Math.imul(c,tt)|0;var bt=(a+(r=r+Math.imul(f,et)|0)|0)+((8191&(n=(n=n+Math.imul(f,rt)|0)+Math.imul(m,et)|0))<<13)|0;a=((o=o+Math.imul(m,rt)|0)+(n>>>13)|0)+(bt>>>26)|0,bt&=67108863,r=Math.imul(O,K),n=(n=Math.imul(O,F))+Math.imul(j,K)|0,o=Math.imul(j,F),r=r+Math.imul(k,U)|0,n=(n=n+Math.imul(k,$)|0)+Math.imul(S,U)|0,o=o+Math.imul(S,$)|0,r=r+Math.imul(x,D)|0,n=(n=n+Math.imul(x,J)|0)+Math.imul(L,D)|0,o=o+Math.imul(L,J)|0,r=r+Math.imul(w,V)|0,n=(n=n+Math.imul(w,Q)|0)+Math.imul(b,V)|0,o=o+Math.imul(b,Q)|0,r=r+Math.imul(g,Y)|0,n=(n=n+Math.imul(g,tt)|0)+Math.imul(M,Y)|0,o=o+Math.imul(M,tt)|0,r=r+Math.imul(d,et)|0,n=(n=n+Math.imul(d,rt)|0)+Math.imul(c,et)|0,o=o+Math.imul(c,rt)|0;var _t=(a+(r=r+Math.imul(f,ot)|0)|0)+((8191&(n=(n=n+Math.imul(f,ht)|0)+Math.imul(m,ot)|0))<<13)|0;a=((o=o+Math.imul(m,ht)|0)+(n>>>13)|0)+(_t>>>26)|0,_t&=67108863,r=Math.imul(B,K),n=(n=Math.imul(B,F))+Math.imul(C,K)|0,o=Math.imul(C,F),r=r+Math.imul(O,U)|0,n=(n=n+Math.imul(O,$)|0)+Math.imul(j,U)|0,o=o+Math.imul(j,$)|0,r=r+Math.imul(k,D)|0,n=(n=n+Math.imul(k,J)|0)+Math.imul(S,D)|0,o=o+Math.imul(S,J)|0,r=r+Math.imul(x,V)|0,n=(n=n+Math.imul(x,Q)|0)+Math.imul(L,V)|0,o=o+Math.imul(L,Q)|0,r=r+Math.imul(w,Y)|0,n=(n=n+Math.imul(w,tt)|0)+Math.imul(b,Y)|0,o=o+Math.imul(b,tt)|0,r=r+Math.imul(g,et)|0,n=(n=n+Math.imul(g,rt)|0)+Math.imul(M,et)|0,o=o+Math.imul(M,rt)|0,r=r+Math.imul(d,ot)|0,n=(n=n+Math.imul(d,ht)|0)+Math.imul(c,ot)|0,o=o+Math.imul(c,ht)|0;var xt=(a+(r=r+Math.imul(f,ut)|0)|0)+((8191&(n=(n=n+Math.imul(f,at)|0)+Math.imul(m,ut)|0))<<13)|0;a=((o=o+Math.imul(m,at)|0)+(n>>>13)|0)+(xt>>>26)|0,xt&=67108863,r=Math.imul(N,K),n=(n=Math.imul(N,F))+Math.imul(Z,K)|0,o=Math.imul(Z,F),r=r+Math.imul(B,U)|0,n=(n=n+Math.imul(B,$)|0)+Math.imul(C,U)|0,o=o+Math.imul(C,$)|0,r=r+Math.imul(O,D)|0,n=(n=n+Math.imul(O,J)|0)+Math.imul(j,D)|0,o=o+Math.imul(j,J)|0,r=r+Math.imul(k,V)|0,n=(n=n+Math.imul(k,Q)|0)+Math.imul(S,V)|0,o=o+Math.imul(S,Q)|0,r=r+Math.imul(x,Y)|0,n=(n=n+Math.imul(x,tt)|0)+Math.imul(L,Y)|0,o=o+Math.imul(L,tt)|0,r=r+Math.imul(w,et)|0,n=(n=n+Math.imul(w,rt)|0)+Math.imul(b,et)|0,o=o+Math.imul(b,rt)|0,r=r+Math.imul(g,ot)|0,n=(n=n+Math.imul(g,ht)|0)+Math.imul(M,ot)|0,o=o+Math.imul(M,ht)|0,r=r+Math.imul(d,ut)|0,n=(n=n+Math.imul(d,at)|0)+Math.imul(c,ut)|0,o=o+Math.imul(c,at)|0;var Lt=(a+(r=r+Math.imul(f,ft)|0)|0)+((8191&(n=(n=n+Math.imul(f,mt)|0)+Math.imul(m,ft)|0))<<13)|0;a=((o=o+Math.imul(m,mt)|0)+(n>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,r=Math.imul(P,K),n=(n=Math.imul(P,F))+Math.imul(I,K)|0,o=Math.imul(I,F),r=r+Math.imul(N,U)|0,n=(n=n+Math.imul(N,$)|0)+Math.imul(Z,U)|0,o=o+Math.imul(Z,$)|0,r=r+Math.imul(B,D)|0,n=(n=n+Math.imul(B,J)|0)+Math.imul(C,D)|0,o=o+Math.imul(C,J)|0,r=r+Math.imul(O,V)|0,n=(n=n+Math.imul(O,Q)|0)+Math.imul(j,V)|0,o=o+Math.imul(j,Q)|0,r=r+Math.imul(k,Y)|0,n=(n=n+Math.imul(k,tt)|0)+Math.imul(S,Y)|0,o=o+Math.imul(S,tt)|0,r=r+Math.imul(x,et)|0,n=(n=n+Math.imul(x,rt)|0)+Math.imul(L,et)|0,o=o+Math.imul(L,rt)|0,r=r+Math.imul(w,ot)|0,n=(n=n+Math.imul(w,ht)|0)+Math.imul(b,ot)|0,o=o+Math.imul(b,ht)|0,r=r+Math.imul(g,ut)|0,n=(n=n+Math.imul(g,at)|0)+Math.imul(M,ut)|0,o=o+Math.imul(M,at)|0,r=r+Math.imul(d,ft)|0,n=(n=n+Math.imul(d,mt)|0)+Math.imul(c,ft)|0,o=o+Math.imul(c,mt)|0;var At=(a+(r=r+Math.imul(f,dt)|0)|0)+((8191&(n=(n=n+Math.imul(f,ct)|0)+Math.imul(m,dt)|0))<<13)|0;a=((o=o+Math.imul(m,ct)|0)+(n>>>13)|0)+(At>>>26)|0,At&=67108863,r=Math.imul(P,U),n=(n=Math.imul(P,$))+Math.imul(I,U)|0,o=Math.imul(I,$),r=r+Math.imul(N,D)|0,n=(n=n+Math.imul(N,J)|0)+Math.imul(Z,D)|0,o=o+Math.imul(Z,J)|0,r=r+Math.imul(B,V)|0,n=(n=n+Math.imul(B,Q)|0)+Math.imul(C,V)|0,o=o+Math.imul(C,Q)|0,r=r+Math.imul(O,Y)|0,n=(n=n+Math.imul(O,tt)|0)+Math.imul(j,Y)|0,o=o+Math.imul(j,tt)|0,r=r+Math.imul(k,et)|0,n=(n=n+Math.imul(k,rt)|0)+Math.imul(S,et)|0,o=o+Math.imul(S,rt)|0,r=r+Math.imul(x,ot)|0,n=(n=n+Math.imul(x,ht)|0)+Math.imul(L,ot)|0,o=o+Math.imul(L,ht)|0,r=r+Math.imul(w,ut)|0,n=(n=n+Math.imul(w,at)|0)+Math.imul(b,ut)|0,o=o+Math.imul(b,at)|0,r=r+Math.imul(g,ft)|0,n=(n=n+Math.imul(g,mt)|0)+Math.imul(M,ft)|0,o=o+Math.imul(M,mt)|0;var kt=(a+(r=r+Math.imul(d,dt)|0)|0)+((8191&(n=(n=n+Math.imul(d,ct)|0)+Math.imul(c,dt)|0))<<13)|0;a=((o=o+Math.imul(c,ct)|0)+(n>>>13)|0)+(kt>>>26)|0,kt&=67108863,r=Math.imul(P,D),n=(n=Math.imul(P,J))+Math.imul(I,D)|0,o=Math.imul(I,J),r=r+Math.imul(N,V)|0,n=(n=n+Math.imul(N,Q)|0)+Math.imul(Z,V)|0,o=o+Math.imul(Z,Q)|0,r=r+Math.imul(B,Y)|0,n=(n=n+Math.imul(B,tt)|0)+Math.imul(C,Y)|0,o=o+Math.imul(C,tt)|0,r=r+Math.imul(O,et)|0,n=(n=n+Math.imul(O,rt)|0)+Math.imul(j,et)|0,o=o+Math.imul(j,rt)|0,r=r+Math.imul(k,ot)|0,n=(n=n+Math.imul(k,ht)|0)+Math.imul(S,ot)|0,o=o+Math.imul(S,ht)|0,r=r+Math.imul(x,ut)|0,n=(n=n+Math.imul(x,at)|0)+Math.imul(L,ut)|0,o=o+Math.imul(L,at)|0,r=r+Math.imul(w,ft)|0,n=(n=n+Math.imul(w,mt)|0)+Math.imul(b,ft)|0,o=o+Math.imul(b,mt)|0;var St=(a+(r=r+Math.imul(g,dt)|0)|0)+((8191&(n=(n=n+Math.imul(g,ct)|0)+Math.imul(M,dt)|0))<<13)|0;a=((o=o+Math.imul(M,ct)|0)+(n>>>13)|0)+(St>>>26)|0,St&=67108863,r=Math.imul(P,V),n=(n=Math.imul(P,Q))+Math.imul(I,V)|0,o=Math.imul(I,Q),r=r+Math.imul(N,Y)|0,n=(n=n+Math.imul(N,tt)|0)+Math.imul(Z,Y)|0,o=o+Math.imul(Z,tt)|0,r=r+Math.imul(B,et)|0,n=(n=n+Math.imul(B,rt)|0)+Math.imul(C,et)|0,o=o+Math.imul(C,rt)|0,r=r+Math.imul(O,ot)|0,n=(n=n+Math.imul(O,ht)|0)+Math.imul(j,ot)|0,o=o+Math.imul(j,ht)|0,r=r+Math.imul(k,ut)|0,n=(n=n+Math.imul(k,at)|0)+Math.imul(S,ut)|0,o=o+Math.imul(S,at)|0,r=r+Math.imul(x,ft)|0,n=(n=n+Math.imul(x,mt)|0)+Math.imul(L,ft)|0,o=o+Math.imul(L,mt)|0;var Et=(a+(r=r+Math.imul(w,dt)|0)|0)+((8191&(n=(n=n+Math.imul(w,ct)|0)+Math.imul(b,dt)|0))<<13)|0;a=((o=o+Math.imul(b,ct)|0)+(n>>>13)|0)+(Et>>>26)|0,Et&=67108863,r=Math.imul(P,Y),n=(n=Math.imul(P,tt))+Math.imul(I,Y)|0,o=Math.imul(I,tt),r=r+Math.imul(N,et)|0,n=(n=n+Math.imul(N,rt)|0)+Math.imul(Z,et)|0,o=o+Math.imul(Z,rt)|0,r=r+Math.imul(B,ot)|0,n=(n=n+Math.imul(B,ht)|0)+Math.imul(C,ot)|0,o=o+Math.imul(C,ht)|0,r=r+Math.imul(O,ut)|0,n=(n=n+Math.imul(O,at)|0)+Math.imul(j,ut)|0,o=o+Math.imul(j,at)|0,r=r+Math.imul(k,ft)|0,n=(n=n+Math.imul(k,mt)|0)+Math.imul(S,ft)|0,o=o+Math.imul(S,mt)|0;var Ot=(a+(r=r+Math.imul(x,dt)|0)|0)+((8191&(n=(n=n+Math.imul(x,ct)|0)+Math.imul(L,dt)|0))<<13)|0;a=((o=o+Math.imul(L,ct)|0)+(n>>>13)|0)+(Ot>>>26)|0,Ot&=67108863,r=Math.imul(P,et),n=(n=Math.imul(P,rt))+Math.imul(I,et)|0,o=Math.imul(I,rt),r=r+Math.imul(N,ot)|0,n=(n=n+Math.imul(N,ht)|0)+Math.imul(Z,ot)|0,o=o+Math.imul(Z,ht)|0,r=r+Math.imul(B,ut)|0,n=(n=n+Math.imul(B,at)|0)+Math.imul(C,ut)|0,o=o+Math.imul(C,at)|0,r=r+Math.imul(O,ft)|0,n=(n=n+Math.imul(O,mt)|0)+Math.imul(j,ft)|0,o=o+Math.imul(j,mt)|0;var jt=(a+(r=r+Math.imul(k,dt)|0)|0)+((8191&(n=(n=n+Math.imul(k,ct)|0)+Math.imul(S,dt)|0))<<13)|0;a=((o=o+Math.imul(S,ct)|0)+(n>>>13)|0)+(jt>>>26)|0,jt&=67108863,r=Math.imul(P,ot),n=(n=Math.imul(P,ht))+Math.imul(I,ot)|0,o=Math.imul(I,ht),r=r+Math.imul(N,ut)|0,n=(n=n+Math.imul(N,at)|0)+Math.imul(Z,ut)|0,o=o+Math.imul(Z,at)|0,r=r+Math.imul(B,ft)|0,n=(n=n+Math.imul(B,mt)|0)+Math.imul(C,ft)|0,o=o+Math.imul(C,mt)|0;var Rt=(a+(r=r+Math.imul(O,dt)|0)|0)+((8191&(n=(n=n+Math.imul(O,ct)|0)+Math.imul(j,dt)|0))<<13)|0;a=((o=o+Math.imul(j,ct)|0)+(n>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,r=Math.imul(P,ut),n=(n=Math.imul(P,at))+Math.imul(I,ut)|0,o=Math.imul(I,at),r=r+Math.imul(N,ft)|0,n=(n=n+Math.imul(N,mt)|0)+Math.imul(Z,ft)|0,o=o+Math.imul(Z,mt)|0;var Bt=(a+(r=r+Math.imul(B,dt)|0)|0)+((8191&(n=(n=n+Math.imul(B,ct)|0)+Math.imul(C,dt)|0))<<13)|0;a=((o=o+Math.imul(C,ct)|0)+(n>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,r=Math.imul(P,ft),n=(n=Math.imul(P,mt))+Math.imul(I,ft)|0,o=Math.imul(I,mt);var Ct=(a+(r=r+Math.imul(N,dt)|0)|0)+((8191&(n=(n=n+Math.imul(N,ct)|0)+Math.imul(Z,dt)|0))<<13)|0;a=((o=o+Math.imul(Z,ct)|0)+(n>>>13)|0)+(Ct>>>26)|0,Ct&=67108863;var qt=(a+(r=Math.imul(P,dt))|0)+((8191&(n=(n=Math.imul(P,ct))+Math.imul(I,dt)|0))<<13)|0;return a=((o=Math.imul(I,ct))+(n>>>13)|0)+(qt>>>26)|0,qt&=67108863,u[0]=vt,u[1]=gt,u[2]=Mt,u[3]=yt,u[4]=wt,u[5]=bt,u[6]=_t,u[7]=xt,u[8]=Lt,u[9]=At,u[10]=kt,u[11]=St,u[12]=Et,u[13]=Ot,u[14]=jt,u[15]=Rt,u[16]=Bt,u[17]=Ct,u[18]=qt,0!==a&&(u[19]=a,e.length++),e};function d(t,i,e){return(new c).mulp(t,i,e)}function c(t,i){this.x=t,this.y=i}Math.imul||(p=m),o.prototype.mulTo=function(t,i){var e,r=this.length+t.length;return e=10===this.length&&10===t.length?p(this,t,i):r<63?m(this,t,i):r<1024?function(t,i,e){e.negative=i.negative^t.negative,e.length=t.length+i.length;for(var r=0,n=0,o=0;o<e.length-1;o++){var h=n;n=0;for(var s=67108863&r,u=Math.min(o,i.length-1),a=Math.max(0,o-t.length+1);a<=u;a++){var l=o-a,f=(0|t.words[l])*(0|i.words[a]),m=67108863&f;s=67108863&(m=m+s|0),n+=(h=(h=h+(f/67108864|0)|0)+(m>>>26)|0)>>>26,h&=67108863}e.words[o]=s,r=h,h=n}return 0!==r?e.words[o]=r:e.length--,e.strip()}(this,t,i):d(this,t,i),e},c.prototype.makeRBT=function(t){for(var i=new Array(t),e=o.prototype._countBits(t)-1,r=0;r<t;r++)i[r]=this.revBin(r,e,t);return i},c.prototype.revBin=function(t,i,e){if(0===t||t===e-1)return t;for(var r=0,n=0;n<i;n++)r|=(1&t)<<i-n-1,t>>=1;return r},c.prototype.permute=function(t,i,e,r,n,o){for(var h=0;h<o;h++)r[h]=i[t[h]],n[h]=e[t[h]]},c.prototype.transform=function(t,i,e,r,n,o){this.permute(o,t,i,e,r,n);for(var h=1;h<n;h<<=1)for(var s=h<<1,u=Math.cos(2*Math.PI/s),a=Math.sin(2*Math.PI/s),l=0;l<n;l+=s)for(var f=u,m=a,p=0;p<h;p++){var d=e[l+p],c=r[l+p],v=e[l+p+h],g=r[l+p+h],M=f*v-m*g;g=f*g+m*v,v=M,e[l+p]=d+v,r[l+p]=c+g,e[l+p+h]=d-v,r[l+p+h]=c-g,p!==s&&(M=u*f-a*m,m=u*m+a*f,f=M)}},c.prototype.guessLen13b=function(t,i){var e=1|Math.max(i,t),r=1&e,n=0;for(e=e/2|0;e;e>>>=1)n++;return 1<<n+1+r},c.prototype.conjugate=function(t,i,e){if(!(e<=1))for(var r=0;r<e/2;r++){var n=t[r];t[r]=t[e-r-1],t[e-r-1]=n,n=i[r],i[r]=-i[e-r-1],i[e-r-1]=-n}},c.prototype.normalize13b=function(t,i){for(var e=0,r=0;r<i/2;r++){var n=8192*Math.round(t[2*r+1]/i)+Math.round(t[2*r]/i)+e;t[r]=67108863&n,e=n<67108864?0:n/67108864|0}return t},c.prototype.convert13b=function(t,i,e,n){for(var o=0,h=0;h<i;h++)o+=0|t[h],e[2*h]=8191&o,o>>>=13,e[2*h+1]=8191&o,o>>>=13;for(h=2*i;h<n;++h)e[h]=0;r(0===o),r(0==(-8192&o))},c.prototype.stub=function(t){for(var i=new Array(t),e=0;e<t;e++)i[e]=0;return i},c.prototype.mulp=function(t,i,e){var r=2*this.guessLen13b(t.length,i.length),n=this.makeRBT(r),o=this.stub(r),h=new Array(r),s=new Array(r),u=new Array(r),a=new Array(r),l=new Array(r),f=new Array(r),m=e.words;m.length=r,this.convert13b(t.words,t.length,h,r),this.convert13b(i.words,i.length,a,r),this.transform(h,o,s,u,r,n),this.transform(a,o,l,f,r,n);for(var p=0;p<r;p++){var d=s[p]*l[p]-u[p]*f[p];u[p]=s[p]*f[p]+u[p]*l[p],s[p]=d}return this.conjugate(s,u,r),this.transform(s,u,m,o,r,n),this.conjugate(m,o,r),this.normalize13b(m,r),e.negative=t.negative^i.negative,e.length=t.length+i.length,e.strip()},o.prototype.mul=function(t){var i=new o(null);return i.words=new Array(this.length+t.length),this.mulTo(t,i)},o.prototype.mulf=function(t){var i=new o(null);return i.words=new Array(this.length+t.length),d(this,t,i)},o.prototype.imul=function(t){return this.clone().mulTo(t,this)},o.prototype.imuln=function(t){r("number"==typeof t),r(t<67108864);for(var i=0,e=0;e<this.length;e++){var n=(0|this.words[e])*t,o=(67108863&n)+(67108863&i);i>>=26,i+=n/67108864|0,i+=o>>>26,this.words[e]=67108863&o}return 0!==i&&(this.words[e]=i,this.length++),this},o.prototype.muln=function(t){return this.clone().imuln(t)},o.prototype.sqr=function(){return this.mul(this)},o.prototype.isqr=function(){return this.imul(this.clone())},o.prototype.pow=function(t){var i=function(t){for(var i=new Array(t.bitLength()),e=0;e<i.length;e++){var r=e/26|0,n=e%26;i[e]=(t.words[r]&1<<n)>>>n}return i}(t);if(0===i.length)return new o(1);for(var e=this,r=0;r<i.length&&0===i[r];r++,e=e.sqr());if(++r<i.length)for(var n=e.sqr();r<i.length;r++,n=n.sqr())0!==i[r]&&(e=e.mul(n));return e},o.prototype.iushln=function(t){r("number"==typeof t&&t>=0);var i,e=t%26,n=(t-e)/26,o=67108863>>>26-e<<26-e;if(0!==e){var h=0;for(i=0;i<this.length;i++){var s=this.words[i]&o,u=(0|this.words[i])-s<<e;this.words[i]=u|h,h=s>>>26-e}h&&(this.words[i]=h,this.length++)}if(0!==n){for(i=this.length-1;i>=0;i--)this.words[i+n]=this.words[i];for(i=0;i<n;i++)this.words[i]=0;this.length+=n}return this.strip()},o.prototype.ishln=function(t){return r(0===this.negative),this.iushln(t)},o.prototype.iushrn=function(t,i,e){var n;r("number"==typeof t&&t>=0),n=i?(i-i%26)/26:0;var o=t%26,h=Math.min((t-o)/26,this.length),s=67108863^67108863>>>o<<o,u=e;if(n-=h,n=Math.max(0,n),u){for(var a=0;a<h;a++)u.words[a]=this.words[a];u.length=h}if(0===h);else if(this.length>h)for(this.length-=h,a=0;a<this.length;a++)this.words[a]=this.words[a+h];else this.words[0]=0,this.length=1;var l=0;for(a=this.length-1;a>=0&&(0!==l||a>=n);a--){var f=0|this.words[a];this.words[a]=l<<26-o|f>>>o,l=f&s}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},o.prototype.ishrn=function(t,i,e){return r(0===this.negative),this.iushrn(t,i,e)},o.prototype.shln=function(t){return this.clone().ishln(t)},o.prototype.ushln=function(t){return this.clone().iushln(t)},o.prototype.shrn=function(t){return this.clone().ishrn(t)},o.prototype.ushrn=function(t){return this.clone().iushrn(t)},o.prototype.testn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26,n=1<<i;return!(this.length<=e)&&!!(this.words[e]&n)},o.prototype.imaskn=function(t){r("number"==typeof t&&t>=0);var i=t%26,e=(t-i)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=e)return this;if(0!==i&&e++,this.length=Math.min(e,this.length),0!==i){var n=67108863^67108863>>>i<<i;this.words[this.length-1]&=n}return this.strip()},o.prototype.maskn=function(t){return this.clone().imaskn(t)},o.prototype.iaddn=function(t){return r("number"==typeof t),r(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},o.prototype._iaddn=function(t){this.words[0]+=t;for(var i=0;i<this.length&&this.words[i]>=67108864;i++)this.words[i]-=67108864,i===this.length-1?this.words[i+1]=1:this.words[i+1]++;return this.length=Math.max(this.length,i+1),this},o.prototype.isubn=function(t){if(r("number"==typeof t),r(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var i=0;i<this.length&&this.words[i]<0;i++)this.words[i]+=67108864,this.words[i+1]-=1;return this.strip()},o.prototype.addn=function(t){return this.clone().iaddn(t)},o.prototype.subn=function(t){return this.clone().isubn(t)},o.prototype.iabs=function(){return this.negative=0,this},o.prototype.abs=function(){return this.clone().iabs()},o.prototype._ishlnsubmul=function(t,i,e){var n,o,h=t.length+e;this._expand(h);var s=0;for(n=0;n<t.length;n++){o=(0|this.words[n+e])+s;var u=(0|t.words[n])*i;s=((o-=67108863&u)>>26)-(u/67108864|0),this.words[n+e]=67108863&o}for(;n<this.length-e;n++)s=(o=(0|this.words[n+e])+s)>>26,this.words[n+e]=67108863&o;if(0===s)return this.strip();for(r(-1===s),s=0,n=0;n<this.length;n++)s=(o=-(0|this.words[n])+s)>>26,this.words[n]=67108863&o;return this.negative=1,this.strip()},o.prototype._wordDiv=function(t,i){var e=(this.length,t.length),r=this.clone(),n=t,h=0|n.words[n.length-1];0!==(e=26-this._countBits(h))&&(n=n.ushln(e),r.iushln(e),h=0|n.words[n.length-1]);var s,u=r.length-n.length;if("mod"!==i){(s=new o(null)).length=u+1,s.words=new Array(s.length);for(var a=0;a<s.length;a++)s.words[a]=0}var l=r.clone()._ishlnsubmul(n,1,u);0===l.negative&&(r=l,s&&(s.words[u]=1));for(var f=u-1;f>=0;f--){var m=67108864*(0|r.words[n.length+f])+(0|r.words[n.length+f-1]);for(m=Math.min(m/h|0,67108863),r._ishlnsubmul(n,m,f);0!==r.negative;)m--,r.negative=0,r._ishlnsubmul(n,1,f),r.isZero()||(r.negative^=1);s&&(s.words[f]=m)}return s&&s.strip(),r.strip(),"div"!==i&&0!==e&&r.iushrn(e),{div:s||null,mod:r}},o.prototype.divmod=function(t,i,e){return r(!t.isZero()),this.isZero()?{div:new o(0),mod:new o(0)}:0!==this.negative&&0===t.negative?(s=this.neg().divmod(t,i),"mod"!==i&&(n=s.div.neg()),"div"!==i&&(h=s.mod.neg(),e&&0!==h.negative&&h.iadd(t)),{div:n,mod:h}):0===this.negative&&0!==t.negative?(s=this.divmod(t.neg(),i),"mod"!==i&&(n=s.div.neg()),{div:n,mod:s.mod}):0!=(this.negative&t.negative)?(s=this.neg().divmod(t.neg(),i),"div"!==i&&(h=s.mod.neg(),e&&0!==h.negative&&h.isub(t)),{div:s.div,mod:h}):t.length>this.length||this.cmp(t)<0?{div:new o(0),mod:this}:1===t.length?"div"===i?{div:this.divn(t.words[0]),mod:null}:"mod"===i?{div:null,mod:new o(this.modn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new o(this.modn(t.words[0]))}:this._wordDiv(t,i);var n,h,s},o.prototype.div=function(t){return this.divmod(t,"div",!1).div},o.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},o.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},o.prototype.divRound=function(t){var i=this.divmod(t);if(i.mod.isZero())return i.div;var e=0!==i.div.negative?i.mod.isub(t):i.mod,r=t.ushrn(1),n=t.andln(1),o=e.cmp(r);return o<0||1===n&&0===o?i.div:0!==i.div.negative?i.div.isubn(1):i.div.iaddn(1)},o.prototype.modn=function(t){r(t<=67108863);for(var i=(1<<26)%t,e=0,n=this.length-1;n>=0;n--)e=(i*e+(0|this.words[n]))%t;return e},o.prototype.idivn=function(t){r(t<=67108863);for(var i=0,e=this.length-1;e>=0;e--){var n=(0|this.words[e])+67108864*i;this.words[e]=n/t|0,i=n%t}return this.strip()},o.prototype.divn=function(t){return this.clone().idivn(t)},o.prototype.egcd=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n=new o(1),h=new o(0),s=new o(0),u=new o(1),a=0;i.isEven()&&e.isEven();)i.iushrn(1),e.iushrn(1),++a;for(var l=e.clone(),f=i.clone();!i.isZero();){for(var m=0,p=1;0==(i.words[0]&p)&&m<26;++m,p<<=1);if(m>0)for(i.iushrn(m);m-- >0;)(n.isOdd()||h.isOdd())&&(n.iadd(l),h.isub(f)),n.iushrn(1),h.iushrn(1);for(var d=0,c=1;0==(e.words[0]&c)&&d<26;++d,c<<=1);if(d>0)for(e.iushrn(d);d-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(f)),s.iushrn(1),u.iushrn(1);i.cmp(e)>=0?(i.isub(e),n.isub(s),h.isub(u)):(e.isub(i),s.isub(n),u.isub(h))}return{a:s,b:u,gcd:e.iushln(a)}},o.prototype._invmp=function(t){r(0===t.negative),r(!t.isZero());var i=this,e=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var n,h=new o(1),s=new o(0),u=e.clone();i.cmpn(1)>0&&e.cmpn(1)>0;){for(var a=0,l=1;0==(i.words[0]&l)&&a<26;++a,l<<=1);if(a>0)for(i.iushrn(a);a-- >0;)h.isOdd()&&h.iadd(u),h.iushrn(1);for(var f=0,m=1;0==(e.words[0]&m)&&f<26;++f,m<<=1);if(f>0)for(e.iushrn(f);f-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);i.cmp(e)>=0?(i.isub(e),h.isub(s)):(e.isub(i),s.isub(h))}return(n=0===i.cmpn(1)?h:s).cmpn(0)<0&&n.iadd(t),n},o.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var i=this.clone(),e=t.clone();i.negative=0,e.negative=0;for(var r=0;i.isEven()&&e.isEven();r++)i.iushrn(1),e.iushrn(1);for(;;){for(;i.isEven();)i.iushrn(1);for(;e.isEven();)e.iushrn(1);var n=i.cmp(e);if(n<0){var o=i;i=e,e=o}else if(0===n||0===e.cmpn(1))break;i.isub(e)}return e.iushln(r)},o.prototype.invm=function(t){return this.egcd(t).a.umod(t)},o.prototype.isEven=function(){return 0==(1&this.words[0])},o.prototype.isOdd=function(){return 1==(1&this.words[0])},o.prototype.andln=function(t){return this.words[0]&t},o.prototype.bincn=function(t){r("number"==typeof t);var i=t%26,e=(t-i)/26,n=1<<i;if(this.length<=e)return this._expand(e+1),this.words[e]|=n,this;for(var o=n,h=e;0!==o&&h<this.length;h++){var s=0|this.words[h];o=(s+=o)>>>26,s&=67108863,this.words[h]=s}return 0!==o&&(this.words[h]=o,this.length++),this},o.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},o.prototype.cmpn=function(t){var i,e=t<0;if(0!==this.negative&&!e)return-1;if(0===this.negative&&e)return 1;if(this.strip(),this.length>1)i=1;else{e&&(t=-t),r(t<=67108863,"Number is too big");var n=0|this.words[0];i=n===t?0:n<t?-1:1}return 0!==this.negative?0|-i:i},o.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return-1;if(0===this.negative&&0!==t.negative)return 1;var i=this.ucmp(t);return 0!==this.negative?0|-i:i},o.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return-1;for(var i=0,e=this.length-1;e>=0;e--){var r=0|this.words[e],n=0|t.words[e];if(r!==n){r<n?i=-1:r>n&&(i=1);break}}return i},o.prototype.gtn=function(t){return 1===this.cmpn(t)},o.prototype.gt=function(t){return 1===this.cmp(t)},o.prototype.gten=function(t){return this.cmpn(t)>=0},o.prototype.gte=function(t){return this.cmp(t)>=0},o.prototype.ltn=function(t){return-1===this.cmpn(t)},o.prototype.lt=function(t){return-1===this.cmp(t)},o.prototype.lten=function(t){return this.cmpn(t)<=0},o.prototype.lte=function(t){return this.cmp(t)<=0},o.prototype.eqn=function(t){return 0===this.cmpn(t)},o.prototype.eq=function(t){return 0===this.cmp(t)},o.red=function(t){return new _(t)},o.prototype.toRed=function(t){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},o.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},o.prototype._forceRed=function(t){return this.red=t,this},o.prototype.forceRed=function(t){return r(!this.red,"Already a number in reduction context"),this._forceRed(t)},o.prototype.redAdd=function(t){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},o.prototype.redIAdd=function(t){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},o.prototype.redSub=function(t){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},o.prototype.redISub=function(t){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},o.prototype.redShl=function(t){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},o.prototype.redMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},o.prototype.redIMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},o.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},o.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},o.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},o.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},o.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},o.prototype.redPow=function(t){return r(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var v={k256:null,p224:null,p192:null,p25519:null};function g(t,i){this.name=t,this.p=new o(i,16),this.n=this.p.bitLength(),this.k=new o(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function M(){g.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function y(){g.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function w(){g.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function b(){g.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function _(t){if("string"==typeof t){var i=o._prime(t);this.m=i.p,this.prime=i}else r(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null}function x(t){_.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new o(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}g.prototype._tmp=function(){var t=new o(null);return t.words=new Array(Math.ceil(this.n/13)),t},g.prototype.ireduce=function(t){var i,e=t;do{this.split(e,this.tmp),i=(e=(e=this.imulK(e)).iadd(this.tmp)).bitLength()}while(i>this.n);var r=i<this.n?-1:e.ucmp(this.p);return 0===r?(e.words[0]=0,e.length=1):r>0?e.isub(this.p):e.strip(),e},g.prototype.split=function(t,i){t.iushrn(this.n,0,i)},g.prototype.imulK=function(t){return t.imul(this.k)},n(M,g),M.prototype.split=function(t,i){for(var e=4194303,r=Math.min(t.length,9),n=0;n<r;n++)i.words[n]=t.words[n];if(i.length=r,t.length<=9)return t.words[0]=0,void(t.length=1);var o=t.words[9];for(i.words[i.length++]=o&e,n=10;n<t.length;n++){var h=0|t.words[n];t.words[n-10]=(h&e)<<4|o>>>22,o=h}o>>>=22,t.words[n-10]=o,0===o&&t.length>10?t.length-=10:t.length-=9},M.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var i=0,e=0;e<t.length;e++){var r=0|t.words[e];i+=977*r,t.words[e]=67108863&i,i=64*r+(i/67108864|0)}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(y,g),n(w,g),n(b,g),b.prototype.imulK=function(t){for(var i=0,e=0;e<t.length;e++){var r=19*(0|t.words[e])+i,n=67108863&r;r>>>=26,t.words[e]=n,i=r}return 0!==i&&(t.words[t.length++]=i),t},o._prime=function(t){if(v[t])return v[t];var i;if("k256"===t)i=new M;else if("p224"===t)i=new y;else if("p192"===t)i=new w;else{if("p25519"!==t)throw new Error("Unknown prime "+t);i=new b}return v[t]=i,i},_.prototype._verify1=function(t){r(0===t.negative,"red works only with positives"),r(t.red,"red works only with red numbers")},_.prototype._verify2=function(t,i){r(0==(t.negative|i.negative),"red works only with positives"),r(t.red&&t.red===i.red,"red works only with red numbers")},_.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):t.umod(this.m)._forceRed(this)},_.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},_.prototype.add=function(t,i){this._verify2(t,i);var e=t.add(i);return e.cmp(this.m)>=0&&e.isub(this.m),e._forceRed(this)},_.prototype.iadd=function(t,i){this._verify2(t,i);var e=t.iadd(i);return e.cmp(this.m)>=0&&e.isub(this.m),e},_.prototype.sub=function(t,i){this._verify2(t,i);var e=t.sub(i);return e.cmpn(0)<0&&e.iadd(this.m),e._forceRed(this)},_.prototype.isub=function(t,i){this._verify2(t,i);var e=t.isub(i);return e.cmpn(0)<0&&e.iadd(this.m),e},_.prototype.shl=function(t,i){return this._verify1(t),this.imod(t.ushln(i))},_.prototype.imul=function(t,i){return this._verify2(t,i),this.imod(t.imul(i))},_.prototype.mul=function(t,i){return this._verify2(t,i),this.imod(t.mul(i))},_.prototype.isqr=function(t){return this.imul(t,t.clone())},_.prototype.sqr=function(t){return this.mul(t,t)},_.prototype.sqrt=function(t){if(t.isZero())return t.clone();var i=this.m.andln(3);if(r(i%2==1),3===i){var e=this.m.add(new o(1)).iushrn(2);return this.pow(t,e)}for(var n=this.m.subn(1),h=0;!n.isZero()&&0===n.andln(1);)h++,n.iushrn(1);r(!n.isZero());var s=new o(1).toRed(this),u=s.redNeg(),a=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new o(2*l*l).toRed(this);0!==this.pow(l,a).cmp(u);)l.redIAdd(u);for(var f=this.pow(l,n),m=this.pow(t,n.addn(1).iushrn(1)),p=this.pow(t,n),d=h;0!==p.cmp(s);){for(var c=p,v=0;0!==c.cmp(s);v++)c=c.redSqr();r(v<d);var g=this.pow(f,new o(1).iushln(d-v-1));m=m.redMul(g),f=g.redSqr(),p=p.redMul(f),d=v}return m},_.prototype.invm=function(t){var i=t._invmp(this.m);return 0!==i.negative?(i.negative=0,this.imod(i).redNeg()):this.imod(i)},_.prototype.pow=function(t,i){if(i.isZero())return new o(1);if(0===i.cmpn(1))return t.clone();var e=new Array(16);e[0]=new o(1).toRed(this),e[1]=t;for(var r=2;r<e.length;r++)e[r]=this.mul(e[r-1],t);var n=e[0],h=0,s=0,u=i.bitLength()%26;for(0===u&&(u=26),r=i.length-1;r>=0;r--){for(var a=i.words[r],l=u-1;l>=0;l--){var f=a>>l&1;n!==e[0]&&(n=this.sqr(n)),0!==f||0!==h?(h<<=1,h|=f,(4===++s||0===r&&0===l)&&(n=this.mul(n,e[h]),s=0,h=0)):s=0}u=26}return n},_.prototype.convertTo=function(t){var i=t.umod(this.m);return i===t?i.clone():i},_.prototype.convertFrom=function(t){var i=t.clone();return i.red=null,i},o.mont=function(t){return new x(t)},n(x,_),x.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},x.prototype.convertFrom=function(t){var i=this.imod(t.mul(this.rinv));return i.red=null,i},x.prototype.imul=function(t,i){if(t.isZero()||i.isZero())return t.words[0]=0,t.length=1,t;var e=t.imul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),o=n;return n.cmp(this.m)>=0?o=n.isub(this.m):n.cmpn(0)<0&&(o=n.iadd(this.m)),o._forceRed(this)},x.prototype.mul=function(t,i){if(t.isZero()||i.isZero())return new o(0)._forceRed(this);var e=t.mul(i),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),n=e.isub(r).iushrn(this.shift),h=n;return n.cmp(this.m)>=0?h=n.isub(this.m):n.cmpn(0)<0&&(h=n.iadd(this.m)),h._forceRed(this)},x.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)}}(t=e.nmd(t),this)},80884:function(t,i,e){"use strict";var r=e(23085).Buffer,n=e(23944),o=e(49604);function h(t){var i=t;if("string"!=typeof i)throw new Error("[ethjs-util] while padding to even, value must be string, is currently "+typeof i+", while padToEven.");return i.length%2&&(i="0"+i),i}function s(t){return"0x"+t.toString(16)}t.exports={arrayContainsArray:function(t,i,e){if(!0!==Array.isArray(t))throw new Error("[ethjs-util] method arrayContainsArray requires input 'superset' to be an array got type '"+typeof t+"'");if(!0!==Array.isArray(i))throw new Error("[ethjs-util] method arrayContainsArray requires input 'subset' to be an array got type '"+typeof i+"'");return i[Boolean(e)?"some":"every"]((function(i){return t.indexOf(i)>=0}))},intToBuffer:function(t){var i=s(t);return new r(h(i.slice(2)),"hex")},getBinarySize:function(t){if("string"!=typeof t)throw new Error("[ethjs-util] while getting binary size, method getBinarySize requires input 'str' to be type String, got '"+typeof t+"'.");return r.byteLength(t,"utf8")},isHexPrefixed:n,stripHexPrefix:o,padToEven:h,intToHex:s,fromAscii:function(t){for(var i="",e=0;e<t.length;e++){var r=t.charCodeAt(e).toString(16);i+=r.length<2?"0"+r:r}return"0x"+i},fromUtf8:function(t){return"0x"+h(new r(t,"utf8").toString("hex")).replace(/^0+|0+$/g,"")},toAscii:function(t){var i="",e=0,r=t.length;for("0x"===t.substring(0,2)&&(e=2);e<r;e+=2){var n=parseInt(t.substr(e,2),16);i+=String.fromCharCode(n)}return i},toUtf8:function(t){return new r(h(o(t).replace(/^0+|0+$/g,"")),"hex").toString("utf8")},getKeys:function(t,i,e){if(!Array.isArray(t))throw new Error("[ethjs-util] method getKeys expecting type Array as 'params' input, got '"+typeof t+"'");if("string"!=typeof i)throw new Error("[ethjs-util] method getKeys expecting type String for input 'key' got '"+typeof i+"'.");for(var r=[],n=0;n<t.length;n++){var o=t[n][i];if(e&&!o)o="";else if("string"!=typeof o)throw new Error("invalid abi");r.push(o)}return r},isHexString:function(t,i){return!("string"!=typeof t||!t.match(/^0x[0-9A-Fa-f]*$/))&&(!i||t.length===2+2*i)}}},26729:function(t){"use strict";var i=Object.prototype.hasOwnProperty,e="~";function r(){}function n(t,i,e){this.fn=t,this.context=i,this.once=e||!1}function o(t,i,r,o,h){if("function"!=typeof r)throw new TypeError("The listener must be a function");var s=new n(r,o||t,h),u=e?e+i:i;return t._events[u]?t._events[u].fn?t._events[u]=[t._events[u],s]:t._events[u].push(s):(t._events[u]=s,t._eventsCount++),t}function h(t,i){0==--t._eventsCount?t._events=new r:delete t._events[i]}function s(){this._events=new r,this._eventsCount=0}Object.create&&(r.prototype=Object.create(null),(new r).__proto__||(e=!1)),s.prototype.eventNames=function(){var t,r,n=[];if(0===this._eventsCount)return n;for(r in t=this._events)i.call(t,r)&&n.push(e?r.slice(1):r);return Object.getOwnPropertySymbols?n.concat(Object.getOwnPropertySymbols(t)):n},s.prototype.listeners=function(t){var i=e?e+t:t,r=this._events[i];if(!r)return[];if(r.fn)return[r.fn];for(var n=0,o=r.length,h=new Array(o);n<o;n++)h[n]=r[n].fn;return h},s.prototype.listenerCount=function(t){var i=e?e+t:t,r=this._events[i];return r?r.fn?1:r.length:0},s.prototype.emit=function(t,i,r,n,o,h){var s=e?e+t:t;if(!this._events[s])return!1;var u,a,l=this._events[s],f=arguments.length;if(l.fn){switch(l.once&&this.removeListener(t,l.fn,void 0,!0),f){case 1:return l.fn.call(l.context),!0;case 2:return l.fn.call(l.context,i),!0;case 3:return l.fn.call(l.context,i,r),!0;case 4:return l.fn.call(l.context,i,r,n),!0;case 5:return l.fn.call(l.context,i,r,n,o),!0;case 6:return l.fn.call(l.context,i,r,n,o,h),!0}for(a=1,u=new Array(f-1);a<f;a++)u[a-1]=arguments[a];l.fn.apply(l.context,u)}else{var m,p=l.length;for(a=0;a<p;a++)switch(l[a].once&&this.removeListener(t,l[a].fn,void 0,!0),f){case 1:l[a].fn.call(l[a].context);break;case 2:l[a].fn.call(l[a].context,i);break;case 3:l[a].fn.call(l[a].context,i,r);break;case 4:l[a].fn.call(l[a].context,i,r,n);break;default:if(!u)for(m=1,u=new Array(f-1);m<f;m++)u[m-1]=arguments[m];l[a].fn.apply(l[a].context,u)}}return!0},s.prototype.on=function(t,i,e){return o(this,t,i,e,!1)},s.prototype.once=function(t,i,e){return o(this,t,i,e,!0)},s.prototype.removeListener=function(t,i,r,n){var o=e?e+t:t;if(!this._events[o])return this;if(!i)return h(this,o),this;var s=this._events[o];if(s.fn)s.fn!==i||n&&!s.once||r&&s.context!==r||h(this,o);else{for(var u=0,a=[],l=s.length;u<l;u++)(s[u].fn!==i||n&&!s[u].once||r&&s[u].context!==r)&&a.push(s[u]);a.length?this._events[o]=1===a.length?a[0]:a:h(this,o)}return this},s.prototype.removeAllListeners=function(t){var i;return t?(i=e?e+t:t,this._events[i]&&h(this,i)):(this._events=new r,this._eventsCount=0),this},s.prototype.off=s.prototype.removeListener,s.prototype.addListener=s.prototype.on,s.prefixed=e,s.EventEmitter=s,t.exports=s},17187:function(t,i,e){"use strict";var r,n=e(25108),o="object"==typeof Reflect?Reflect:null,h=o&&"function"==typeof o.apply?o.apply:function(t,i,e){return Function.prototype.apply.call(t,i,e)};r=o&&"function"==typeof o.ownKeys?o.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var s=Number.isNaN||function(t){return t!=t};function u(){u.init.call(this)}t.exports=u,t.exports.once=function(t,i){return new Promise((function(e,r){function n(e){t.removeListener(i,o),r(e)}function o(){"function"==typeof t.removeListener&&t.removeListener("error",n),e([].slice.call(arguments))}M(t,i,o,{once:!0}),"error"!==i&&function(t,i,e){"function"==typeof t.on&&M(t,"error",i,e)}(t,n,{once:!0})}))},u.EventEmitter=u,u.prototype._events=void 0,u.prototype._eventsCount=0,u.prototype._maxListeners=void 0;var a=10;function l(t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t)}function f(t){return void 0===t._maxListeners?u.defaultMaxListeners:t._maxListeners}function m(t,i,e,r){var o,h,s,u;if(l(e),void 0===(h=t._events)?(h=t._events=Object.create(null),t._eventsCount=0):(void 0!==h.newListener&&(t.emit("newListener",i,e.listener?e.listener:e),h=t._events),s=h[i]),void 0===s)s=h[i]=e,++t._eventsCount;else if("function"==typeof s?s=h[i]=r?[e,s]:[s,e]:r?s.unshift(e):s.push(e),(o=f(t))>0&&s.length>o&&!s.warned){s.warned=!0;var a=new Error("Possible EventEmitter memory leak detected. "+s.length+" "+String(i)+" listeners added. Use emitter.setMaxListeners() to increase limit");a.name="MaxListenersExceededWarning",a.emitter=t,a.type=i,a.count=s.length,u=a,n&&n.warn&&n.warn(u)}return t}function p(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function d(t,i,e){var r={fired:!1,wrapFn:void 0,target:t,type:i,listener:e},n=p.bind(r);return n.listener=e,r.wrapFn=n,n}function c(t,i,e){var r=t._events;if(void 0===r)return[];var n=r[i];return void 0===n?[]:"function"==typeof n?e?[n.listener||n]:[n]:e?function(t){for(var i=new Array(t.length),e=0;e<i.length;++e)i[e]=t[e].listener||t[e];return i}(n):g(n,n.length)}function v(t){var i=this._events;if(void 0!==i){var e=i[t];if("function"==typeof e)return 1;if(void 0!==e)return e.length}return 0}function g(t,i){for(var e=new Array(i),r=0;r<i;++r)e[r]=t[r];return e}function M(t,i,e,r){if("function"==typeof t.on)r.once?t.once(i,e):t.on(i,e);else{if("function"!=typeof t.addEventListener)throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(i,(function n(o){r.once&&t.removeEventListener(i,n),e(o)}))}}Object.defineProperty(u,"defaultMaxListeners",{enumerable:!0,get:function(){return a},set:function(t){if("number"!=typeof t||t<0||s(t))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+t+".");a=t}}),u.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},u.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||s(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this},u.prototype.getMaxListeners=function(){return f(this)},u.prototype.emit=function(t){for(var i=[],e=1;e<arguments.length;e++)i.push(arguments[e]);var r="error"===t,n=this._events;if(void 0!==n)r=r&&void 0===n.error;else if(!r)return!1;if(r){var o;if(i.length>0&&(o=i[0]),o instanceof Error)throw o;var s=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw s.context=o,s}var u=n[t];if(void 0===u)return!1;if("function"==typeof u)h(u,this,i);else{var a=u.length,l=g(u,a);for(e=0;e<a;++e)h(l[e],this,i)}return!0},u.prototype.addListener=function(t,i){return m(this,t,i,!1)},u.prototype.on=u.prototype.addListener,u.prototype.prependListener=function(t,i){return m(this,t,i,!0)},u.prototype.once=function(t,i){return l(i),this.on(t,d(this,t,i)),this},u.prototype.prependOnceListener=function(t,i){return l(i),this.prependListener(t,d(this,t,i)),this},u.prototype.removeListener=function(t,i){var e,r,n,o,h;if(l(i),void 0===(r=this._events))return this;if(void 0===(e=r[t]))return this;if(e===i||e.listener===i)0==--this._eventsCount?this._events=Object.create(null):(delete r[t],r.removeListener&&this.emit("removeListener",t,e.listener||i));else if("function"!=typeof e){for(n=-1,o=e.length-1;o>=0;o--)if(e[o]===i||e[o].listener===i){h=e[o].listener,n=o;break}if(n<0)return this;0===n?e.shift():function(t,i){for(;i+1<t.length;i++)t[i]=t[i+1];t.pop()}(e,n),1===e.length&&(r[t]=e[0]),void 0!==r.removeListener&&this.emit("removeListener",t,h||i)}return this},u.prototype.off=u.prototype.removeListener,u.prototype.removeAllListeners=function(t){var i,e,r;if(void 0===(e=this._events))return this;if(void 0===e.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==e[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete e[t]),this;if(0===arguments.length){var n,o=Object.keys(e);for(r=0;r<o.length;++r)"removeListener"!==(n=o[r])&&this.removeAllListeners(n);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(i=e[t]))this.removeListener(t,i);else if(void 0!==i)for(r=i.length-1;r>=0;r--)this.removeListener(t,i[r]);return this},u.prototype.listeners=function(t){return c(this,t,!0)},u.prototype.rawListeners=function(t){return c(this,t,!1)},u.listenerCount=function(t,i){return"function"==typeof t.listenerCount?t.listenerCount(i):v.call(t,i)},u.prototype.listenerCount=v,u.prototype.eventNames=function(){return this._eventsCount>0?r(this._events):[]}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,